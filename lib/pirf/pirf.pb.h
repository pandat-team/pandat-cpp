// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pirf.proto

#ifndef PROTOBUF_pirf_2eproto__INCLUDED
#define PROTOBUF_pirf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pirf_2eproto();
void protobuf_AssignDesc_pirf_2eproto();
void protobuf_ShutdownFile_pirf_2eproto();

class Tuple;
class Tuple_Body;
class Tuple_Body_ArrayPair;
class Tuple_Body_ArrayPair_Array;
class Tuple_Body_ArrayPair_Array_Element;
class Tuple_Body_BoolPair;
class Tuple_Body_DoublePair;
class Tuple_Body_IntPair;
class Tuple_Body_NullPair;
class Tuple_Body_StringPair;
class Tuple_Body_TuplePair;

enum Tuple_Body_Null {
  Tuple_Body_Null_NULL_VALUE = 0,
  Tuple_Body_Null_Tuple_Body_Null_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tuple_Body_Null_Tuple_Body_Null_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tuple_Body_Null_IsValid(int value);
const Tuple_Body_Null Tuple_Body_Null_Null_MIN = Tuple_Body_Null_NULL_VALUE;
const Tuple_Body_Null Tuple_Body_Null_Null_MAX = Tuple_Body_Null_NULL_VALUE;
const int Tuple_Body_Null_Null_ARRAYSIZE = Tuple_Body_Null_Null_MAX + 1;

const ::google::protobuf::EnumDescriptor* Tuple_Body_Null_descriptor();
inline const ::std::string& Tuple_Body_Null_Name(Tuple_Body_Null value) {
  return ::google::protobuf::internal::NameOfEnum(
    Tuple_Body_Null_descriptor(), value);
}
inline bool Tuple_Body_Null_Parse(
    const ::std::string& name, Tuple_Body_Null* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Tuple_Body_Null>(
    Tuple_Body_Null_descriptor(), name, value);
}
// ===================================================================

class Tuple_Body_StringPair : public ::google::protobuf::Message {
 public:
  Tuple_Body_StringPair();
  virtual ~Tuple_Body_StringPair();

  Tuple_Body_StringPair(const Tuple_Body_StringPair& from);

  inline Tuple_Body_StringPair& operator=(const Tuple_Body_StringPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_StringPair& default_instance();

  void Swap(Tuple_Body_StringPair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_StringPair* New() const { return New(NULL); }

  Tuple_Body_StringPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_StringPair& from);
  void MergeFrom(const Tuple_Body_StringPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_StringPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.StringPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_StringPair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_IntPair : public ::google::protobuf::Message {
 public:
  Tuple_Body_IntPair();
  virtual ~Tuple_Body_IntPair();

  Tuple_Body_IntPair(const Tuple_Body_IntPair& from);

  inline Tuple_Body_IntPair& operator=(const Tuple_Body_IntPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_IntPair& default_instance();

  void Swap(Tuple_Body_IntPair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_IntPair* New() const { return New(NULL); }

  Tuple_Body_IntPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_IntPair& from);
  void MergeFrom(const Tuple_Body_IntPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_IntPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.IntPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int64 value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_IntPair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_DoublePair : public ::google::protobuf::Message {
 public:
  Tuple_Body_DoublePair();
  virtual ~Tuple_Body_DoublePair();

  Tuple_Body_DoublePair(const Tuple_Body_DoublePair& from);

  inline Tuple_Body_DoublePair& operator=(const Tuple_Body_DoublePair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_DoublePair& default_instance();

  void Swap(Tuple_Body_DoublePair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_DoublePair* New() const { return New(NULL); }

  Tuple_Body_DoublePair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_DoublePair& from);
  void MergeFrom(const Tuple_Body_DoublePair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_DoublePair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.DoublePair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  double value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_DoublePair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_BoolPair : public ::google::protobuf::Message {
 public:
  Tuple_Body_BoolPair();
  virtual ~Tuple_Body_BoolPair();

  Tuple_Body_BoolPair(const Tuple_Body_BoolPair& from);

  inline Tuple_Body_BoolPair& operator=(const Tuple_Body_BoolPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_BoolPair& default_instance();

  void Swap(Tuple_Body_BoolPair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_BoolPair* New() const { return New(NULL); }

  Tuple_Body_BoolPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_BoolPair& from);
  void MergeFrom(const Tuple_Body_BoolPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_BoolPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bool value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.BoolPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  bool value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_BoolPair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_TuplePair : public ::google::protobuf::Message {
 public:
  Tuple_Body_TuplePair();
  virtual ~Tuple_Body_TuplePair();

  Tuple_Body_TuplePair(const Tuple_Body_TuplePair& from);

  inline Tuple_Body_TuplePair& operator=(const Tuple_Body_TuplePair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_TuplePair& default_instance();

  void Swap(Tuple_Body_TuplePair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_TuplePair* New() const { return New(NULL); }

  Tuple_Body_TuplePair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_TuplePair& from);
  void MergeFrom(const Tuple_Body_TuplePair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_TuplePair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional .Tuple value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::Tuple& value() const;
  ::Tuple* mutable_value();
  ::Tuple* release_value();
  void set_allocated_value(::Tuple* value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.TuplePair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::Tuple* value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_TuplePair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_NullPair : public ::google::protobuf::Message {
 public:
  Tuple_Body_NullPair();
  virtual ~Tuple_Body_NullPair();

  Tuple_Body_NullPair(const Tuple_Body_NullPair& from);

  inline Tuple_Body_NullPair& operator=(const Tuple_Body_NullPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_NullPair& default_instance();

  void Swap(Tuple_Body_NullPair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_NullPair* New() const { return New(NULL); }

  Tuple_Body_NullPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_NullPair& from);
  void MergeFrom(const Tuple_Body_NullPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_NullPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional .Tuple.Body.Null value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::Tuple_Body_Null value() const;
  void set_value(::Tuple_Body_Null value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.NullPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  int value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_NullPair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_ArrayPair_Array_Element : public ::google::protobuf::Message {
 public:
  Tuple_Body_ArrayPair_Array_Element();
  virtual ~Tuple_Body_ArrayPair_Array_Element();

  Tuple_Body_ArrayPair_Array_Element(const Tuple_Body_ArrayPair_Array_Element& from);

  inline Tuple_Body_ArrayPair_Array_Element& operator=(const Tuple_Body_ArrayPair_Array_Element& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_ArrayPair_Array_Element& default_instance();

  enum ContentCase {
    kStringContent = 1,
    kTupleContent = 2,
    kIntContent = 4,
    kDoubleContent = 5,
    kBoolContent = 6,
    kNullContent = 7,
    kArrayContent = 8,
    CONTENT_NOT_SET = 0,
  };

  void Swap(Tuple_Body_ArrayPair_Array_Element* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_ArrayPair_Array_Element* New() const { return New(NULL); }

  Tuple_Body_ArrayPair_Array_Element* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_ArrayPair_Array_Element& from);
  void MergeFrom(const Tuple_Body_ArrayPair_Array_Element& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_ArrayPair_Array_Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_content = 1;
  private:
  bool has_string_content() const;
  public:
  void clear_string_content();
  static const int kStringContentFieldNumber = 1;
  const ::std::string& string_content() const;
  void set_string_content(const ::std::string& value);
  void set_string_content(const char* value);
  void set_string_content(const char* value, size_t size);
  ::std::string* mutable_string_content();
  ::std::string* release_string_content();
  void set_allocated_string_content(::std::string* string_content);

  // optional .Tuple tuple_content = 2;
  bool has_tuple_content() const;
  void clear_tuple_content();
  static const int kTupleContentFieldNumber = 2;
  const ::Tuple& tuple_content() const;
  ::Tuple* mutable_tuple_content();
  ::Tuple* release_tuple_content();
  void set_allocated_tuple_content(::Tuple* tuple_content);

  // optional int64 int_content = 4;
  private:
  bool has_int_content() const;
  public:
  void clear_int_content();
  static const int kIntContentFieldNumber = 4;
  ::google::protobuf::int64 int_content() const;
  void set_int_content(::google::protobuf::int64 value);

  // optional double double_content = 5;
  private:
  bool has_double_content() const;
  public:
  void clear_double_content();
  static const int kDoubleContentFieldNumber = 5;
  double double_content() const;
  void set_double_content(double value);

  // optional bool bool_content = 6;
  private:
  bool has_bool_content() const;
  public:
  void clear_bool_content();
  static const int kBoolContentFieldNumber = 6;
  bool bool_content() const;
  void set_bool_content(bool value);

  // optional .Tuple.Body.Null null_content = 7;
  private:
  bool has_null_content() const;
  public:
  void clear_null_content();
  static const int kNullContentFieldNumber = 7;
  ::Tuple_Body_Null null_content() const;
  void set_null_content(::Tuple_Body_Null value);

  // optional .Tuple.Body.ArrayPair.Array array_content = 8;
  bool has_array_content() const;
  void clear_array_content();
  static const int kArrayContentFieldNumber = 8;
  const ::Tuple_Body_ArrayPair_Array& array_content() const;
  ::Tuple_Body_ArrayPair_Array* mutable_array_content();
  ::Tuple_Body_ArrayPair_Array* release_array_content();
  void set_allocated_array_content(::Tuple_Body_ArrayPair_Array* array_content);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:Tuple.Body.ArrayPair.Array.Element)
 private:
  inline void set_has_string_content();
  inline void set_has_tuple_content();
  inline void set_has_int_content();
  inline void set_has_double_content();
  inline void set_has_bool_content();
  inline void set_has_null_content();
  inline void set_has_array_content();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union ContentUnion {
    ContentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_content_;
    ::Tuple* tuple_content_;
    ::google::protobuf::int64 int_content_;
    double double_content_;
    bool bool_content_;
    int null_content_;
    ::Tuple_Body_ArrayPair_Array* array_content_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_ArrayPair_Array_Element* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_ArrayPair_Array : public ::google::protobuf::Message {
 public:
  Tuple_Body_ArrayPair_Array();
  virtual ~Tuple_Body_ArrayPair_Array();

  Tuple_Body_ArrayPair_Array(const Tuple_Body_ArrayPair_Array& from);

  inline Tuple_Body_ArrayPair_Array& operator=(const Tuple_Body_ArrayPair_Array& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_ArrayPair_Array& default_instance();

  void Swap(Tuple_Body_ArrayPair_Array* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_ArrayPair_Array* New() const { return New(NULL); }

  Tuple_Body_ArrayPair_Array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_ArrayPair_Array& from);
  void MergeFrom(const Tuple_Body_ArrayPair_Array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_ArrayPair_Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Tuple_Body_ArrayPair_Array_Element Element;

  // accessors -------------------------------------------------------

  // repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  const ::Tuple_Body_ArrayPair_Array_Element& element(int index) const;
  ::Tuple_Body_ArrayPair_Array_Element* mutable_element(int index);
  ::Tuple_Body_ArrayPair_Array_Element* add_element();
  ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >*
      mutable_element();
  const ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >&
      element() const;

  // @@protoc_insertion_point(class_scope:Tuple.Body.ArrayPair.Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element > element_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_ArrayPair_Array* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body_ArrayPair : public ::google::protobuf::Message {
 public:
  Tuple_Body_ArrayPair();
  virtual ~Tuple_Body_ArrayPair();

  Tuple_Body_ArrayPair(const Tuple_Body_ArrayPair& from);

  inline Tuple_Body_ArrayPair& operator=(const Tuple_Body_ArrayPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body_ArrayPair& default_instance();

  void Swap(Tuple_Body_ArrayPair* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body_ArrayPair* New() const { return New(NULL); }

  Tuple_Body_ArrayPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body_ArrayPair& from);
  void MergeFrom(const Tuple_Body_ArrayPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body_ArrayPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Tuple_Body_ArrayPair_Array Array;

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional .Tuple.Body.ArrayPair.Array value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::Tuple_Body_ArrayPair_Array& value() const;
  ::Tuple_Body_ArrayPair_Array* mutable_value();
  ::Tuple_Body_ArrayPair_Array* release_value();
  void set_allocated_value(::Tuple_Body_ArrayPair_Array* value);

  // @@protoc_insertion_point(class_scope:Tuple.Body.ArrayPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::Tuple_Body_ArrayPair_Array* value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body_ArrayPair* default_instance_;
};
// -------------------------------------------------------------------

class Tuple_Body : public ::google::protobuf::Message {
 public:
  Tuple_Body();
  virtual ~Tuple_Body();

  Tuple_Body(const Tuple_Body& from);

  inline Tuple_Body& operator=(const Tuple_Body& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple_Body& default_instance();

  enum ContentCase {
    kStringContent = 1,
    kTupleContent = 2,
    kStringPairContent = 3,
    kIntPairContent = 4,
    kDoublePairContent = 5,
    kBoolPairContent = 6,
    kTuplePairContent = 7,
    kNullPairContent = 8,
    kArrayPairContent = 9,
    CONTENT_NOT_SET = 0,
  };

  void Swap(Tuple_Body* other);

  // implements Message ----------------------------------------------

  inline Tuple_Body* New() const { return New(NULL); }

  Tuple_Body* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple_Body& from);
  void MergeFrom(const Tuple_Body& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple_Body* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Tuple_Body_StringPair StringPair;
  typedef Tuple_Body_IntPair IntPair;
  typedef Tuple_Body_DoublePair DoublePair;
  typedef Tuple_Body_BoolPair BoolPair;
  typedef Tuple_Body_TuplePair TuplePair;
  typedef Tuple_Body_NullPair NullPair;
  typedef Tuple_Body_ArrayPair ArrayPair;

  typedef Tuple_Body_Null Null;
  static const Null NULL_VALUE = Tuple_Body_Null_NULL_VALUE;
  static inline bool Null_IsValid(int value) {
    return Tuple_Body_Null_IsValid(value);
  }
  static const Null Null_MIN =
    Tuple_Body_Null_Null_MIN;
  static const Null Null_MAX =
    Tuple_Body_Null_Null_MAX;
  static const int Null_ARRAYSIZE =
    Tuple_Body_Null_Null_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Null_descriptor() {
    return Tuple_Body_Null_descriptor();
  }
  static inline const ::std::string& Null_Name(Null value) {
    return Tuple_Body_Null_Name(value);
  }
  static inline bool Null_Parse(const ::std::string& name,
      Null* value) {
    return Tuple_Body_Null_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string string_content = 1;
  private:
  bool has_string_content() const;
  public:
  void clear_string_content();
  static const int kStringContentFieldNumber = 1;
  const ::std::string& string_content() const;
  void set_string_content(const ::std::string& value);
  void set_string_content(const char* value);
  void set_string_content(const char* value, size_t size);
  ::std::string* mutable_string_content();
  ::std::string* release_string_content();
  void set_allocated_string_content(::std::string* string_content);

  // optional .Tuple tuple_content = 2;
  bool has_tuple_content() const;
  void clear_tuple_content();
  static const int kTupleContentFieldNumber = 2;
  const ::Tuple& tuple_content() const;
  ::Tuple* mutable_tuple_content();
  ::Tuple* release_tuple_content();
  void set_allocated_tuple_content(::Tuple* tuple_content);

  // optional .Tuple.Body.StringPair string_pair_content = 3;
  bool has_string_pair_content() const;
  void clear_string_pair_content();
  static const int kStringPairContentFieldNumber = 3;
  const ::Tuple_Body_StringPair& string_pair_content() const;
  ::Tuple_Body_StringPair* mutable_string_pair_content();
  ::Tuple_Body_StringPair* release_string_pair_content();
  void set_allocated_string_pair_content(::Tuple_Body_StringPair* string_pair_content);

  // optional .Tuple.Body.IntPair int_pair_content = 4;
  bool has_int_pair_content() const;
  void clear_int_pair_content();
  static const int kIntPairContentFieldNumber = 4;
  const ::Tuple_Body_IntPair& int_pair_content() const;
  ::Tuple_Body_IntPair* mutable_int_pair_content();
  ::Tuple_Body_IntPair* release_int_pair_content();
  void set_allocated_int_pair_content(::Tuple_Body_IntPair* int_pair_content);

  // optional .Tuple.Body.DoublePair double_pair_content = 5;
  bool has_double_pair_content() const;
  void clear_double_pair_content();
  static const int kDoublePairContentFieldNumber = 5;
  const ::Tuple_Body_DoublePair& double_pair_content() const;
  ::Tuple_Body_DoublePair* mutable_double_pair_content();
  ::Tuple_Body_DoublePair* release_double_pair_content();
  void set_allocated_double_pair_content(::Tuple_Body_DoublePair* double_pair_content);

  // optional .Tuple.Body.BoolPair bool_pair_content = 6;
  bool has_bool_pair_content() const;
  void clear_bool_pair_content();
  static const int kBoolPairContentFieldNumber = 6;
  const ::Tuple_Body_BoolPair& bool_pair_content() const;
  ::Tuple_Body_BoolPair* mutable_bool_pair_content();
  ::Tuple_Body_BoolPair* release_bool_pair_content();
  void set_allocated_bool_pair_content(::Tuple_Body_BoolPair* bool_pair_content);

  // optional .Tuple.Body.TuplePair tuple_pair_content = 7;
  bool has_tuple_pair_content() const;
  void clear_tuple_pair_content();
  static const int kTuplePairContentFieldNumber = 7;
  const ::Tuple_Body_TuplePair& tuple_pair_content() const;
  ::Tuple_Body_TuplePair* mutable_tuple_pair_content();
  ::Tuple_Body_TuplePair* release_tuple_pair_content();
  void set_allocated_tuple_pair_content(::Tuple_Body_TuplePair* tuple_pair_content);

  // optional .Tuple.Body.NullPair null_pair_content = 8;
  bool has_null_pair_content() const;
  void clear_null_pair_content();
  static const int kNullPairContentFieldNumber = 8;
  const ::Tuple_Body_NullPair& null_pair_content() const;
  ::Tuple_Body_NullPair* mutable_null_pair_content();
  ::Tuple_Body_NullPair* release_null_pair_content();
  void set_allocated_null_pair_content(::Tuple_Body_NullPair* null_pair_content);

  // optional .Tuple.Body.ArrayPair array_pair_content = 9;
  bool has_array_pair_content() const;
  void clear_array_pair_content();
  static const int kArrayPairContentFieldNumber = 9;
  const ::Tuple_Body_ArrayPair& array_pair_content() const;
  ::Tuple_Body_ArrayPair* mutable_array_pair_content();
  ::Tuple_Body_ArrayPair* release_array_pair_content();
  void set_allocated_array_pair_content(::Tuple_Body_ArrayPair* array_pair_content);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:Tuple.Body)
 private:
  inline void set_has_string_content();
  inline void set_has_tuple_content();
  inline void set_has_string_pair_content();
  inline void set_has_int_pair_content();
  inline void set_has_double_pair_content();
  inline void set_has_bool_pair_content();
  inline void set_has_tuple_pair_content();
  inline void set_has_null_pair_content();
  inline void set_has_array_pair_content();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union ContentUnion {
    ContentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_content_;
    ::Tuple* tuple_content_;
    ::Tuple_Body_StringPair* string_pair_content_;
    ::Tuple_Body_IntPair* int_pair_content_;
    ::Tuple_Body_DoublePair* double_pair_content_;
    ::Tuple_Body_BoolPair* bool_pair_content_;
    ::Tuple_Body_TuplePair* tuple_pair_content_;
    ::Tuple_Body_NullPair* null_pair_content_;
    ::Tuple_Body_ArrayPair* array_pair_content_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple_Body* default_instance_;
};
// -------------------------------------------------------------------

class Tuple : public ::google::protobuf::Message {
 public:
  Tuple();
  virtual ~Tuple();

  Tuple(const Tuple& from);

  inline Tuple& operator=(const Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple& default_instance();

  void Swap(Tuple* other);

  // implements Message ----------------------------------------------

  inline Tuple* New() const { return New(NULL); }

  Tuple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple& from);
  void MergeFrom(const Tuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Tuple_Body Body;

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // map<string, string> attr = 2;
  int attr_size() const;
  void clear_attr();
  static const int kAttrFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      attr() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_attr();

  // repeated .Tuple.Body body = 3;
  int body_size() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::Tuple_Body& body(int index) const;
  ::Tuple_Body* mutable_body(int index);
  ::Tuple_Body* add_body();
  ::google::protobuf::RepeatedPtrField< ::Tuple_Body >*
      mutable_body();
  const ::google::protobuf::RepeatedPtrField< ::Tuple_Body >&
      body() const;

  // @@protoc_insertion_point(class_scope:Tuple)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Tuple_AttrEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > attr_;
  ::google::protobuf::RepeatedPtrField< ::Tuple_Body > body_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pirf_2eproto();
  friend void protobuf_AssignDesc_pirf_2eproto();
  friend void protobuf_ShutdownFile_pirf_2eproto();

  void InitAsDefaultInstance();
  static Tuple* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Tuple_Body_StringPair

// optional string key = 1;
inline void Tuple_Body_StringPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_StringPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.StringPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_StringPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.StringPair.key)
}
inline void Tuple_Body_StringPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.StringPair.key)
}
inline void Tuple_Body_StringPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.StringPair.key)
}
inline ::std::string* Tuple_Body_StringPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.StringPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_StringPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_StringPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.StringPair.key)
}

// optional string value = 2;
inline void Tuple_Body_StringPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_StringPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.StringPair.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_StringPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.StringPair.value)
}
inline void Tuple_Body_StringPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.StringPair.value)
}
inline void Tuple_Body_StringPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.StringPair.value)
}
inline ::std::string* Tuple_Body_StringPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.StringPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_StringPair::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_StringPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.StringPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_IntPair

// optional string key = 1;
inline void Tuple_Body_IntPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_IntPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.IntPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_IntPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.IntPair.key)
}
inline void Tuple_Body_IntPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.IntPair.key)
}
inline void Tuple_Body_IntPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.IntPair.key)
}
inline ::std::string* Tuple_Body_IntPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.IntPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_IntPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_IntPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.IntPair.key)
}

// optional int64 value = 2;
inline void Tuple_Body_IntPair::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Tuple_Body_IntPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.IntPair.value)
  return value_;
}
inline void Tuple_Body_IntPair::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.IntPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_DoublePair

// optional string key = 1;
inline void Tuple_Body_DoublePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_DoublePair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.DoublePair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_DoublePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.DoublePair.key)
}
inline void Tuple_Body_DoublePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.DoublePair.key)
}
inline void Tuple_Body_DoublePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.DoublePair.key)
}
inline ::std::string* Tuple_Body_DoublePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.DoublePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_DoublePair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_DoublePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.DoublePair.key)
}

// optional double value = 2;
inline void Tuple_Body_DoublePair::clear_value() {
  value_ = 0;
}
inline double Tuple_Body_DoublePair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.DoublePair.value)
  return value_;
}
inline void Tuple_Body_DoublePair::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.DoublePair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_BoolPair

// optional string key = 1;
inline void Tuple_Body_BoolPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_BoolPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.BoolPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_BoolPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.BoolPair.key)
}
inline void Tuple_Body_BoolPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.BoolPair.key)
}
inline void Tuple_Body_BoolPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.BoolPair.key)
}
inline ::std::string* Tuple_Body_BoolPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.BoolPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_BoolPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_BoolPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.BoolPair.key)
}

// optional bool value = 2;
inline void Tuple_Body_BoolPair::clear_value() {
  value_ = false;
}
inline bool Tuple_Body_BoolPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.BoolPair.value)
  return value_;
}
inline void Tuple_Body_BoolPair::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.BoolPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_TuplePair

// optional string key = 1;
inline void Tuple_Body_TuplePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_TuplePair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.TuplePair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_TuplePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.TuplePair.key)
}
inline void Tuple_Body_TuplePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.TuplePair.key)
}
inline void Tuple_Body_TuplePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.TuplePair.key)
}
inline ::std::string* Tuple_Body_TuplePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.TuplePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_TuplePair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_TuplePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.TuplePair.key)
}

// optional .Tuple value = 2;
inline bool Tuple_Body_TuplePair::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
inline void Tuple_Body_TuplePair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::Tuple& Tuple_Body_TuplePair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.TuplePair.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Tuple* Tuple_Body_TuplePair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.TuplePair.value)
  return value_;
}
inline ::Tuple* Tuple_Body_TuplePair::release_value() {
  
  ::Tuple* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Tuple_Body_TuplePair::set_allocated_value(::Tuple* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.TuplePair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_NullPair

// optional string key = 1;
inline void Tuple_Body_NullPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_NullPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.NullPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_NullPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.NullPair.key)
}
inline void Tuple_Body_NullPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.NullPair.key)
}
inline void Tuple_Body_NullPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.NullPair.key)
}
inline ::std::string* Tuple_Body_NullPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.NullPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_NullPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_NullPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.NullPair.key)
}

// optional .Tuple.Body.Null value = 2;
inline void Tuple_Body_NullPair::clear_value() {
  value_ = 0;
}
inline ::Tuple_Body_Null Tuple_Body_NullPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.NullPair.value)
  return static_cast< ::Tuple_Body_Null >(value_);
}
inline void Tuple_Body_NullPair::set_value(::Tuple_Body_Null value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.NullPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_ArrayPair_Array_Element

// optional string string_content = 1;
inline bool Tuple_Body_ArrayPair_Array_Element::has_string_content() const {
  return content_case() == kStringContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_string_content() {
  _oneof_case_[0] = kStringContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_string_content() {
  if (has_string_content()) {
    content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
inline const ::std::string& Tuple_Body_ArrayPair_Array_Element::string_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.string_content)
  if (has_string_content()) {
    return content_.string_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Tuple_Body_ArrayPair_Array_Element::set_string_content(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.string_content)
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.string_content)
}
inline void Tuple_Body_ArrayPair_Array_Element::set_string_content(const char* value) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.ArrayPair.Array.Element.string_content)
}
inline void Tuple_Body_ArrayPair_Array_Element::set_string_content(const char* value, size_t size) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.ArrayPair.Array.Element.string_content)
}
inline ::std::string* Tuple_Body_ArrayPair_Array_Element::mutable_string_content() {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.string_content)
  return content_.string_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_ArrayPair_Array_Element::release_string_content() {
  if (has_string_content()) {
    clear_has_content();
    return content_.string_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Tuple_Body_ArrayPair_Array_Element::set_allocated_string_content(::std::string* string_content) {
  if (!has_string_content()) {
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (string_content != NULL) {
    set_has_string_content();
    content_.string_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_content);
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.string_content)
}

// optional .Tuple tuple_content = 2;
inline bool Tuple_Body_ArrayPair_Array_Element::has_tuple_content() const {
  return content_case() == kTupleContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_tuple_content() {
  _oneof_case_[0] = kTupleContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_tuple_content() {
  if (has_tuple_content()) {
    delete content_.tuple_content_;
    clear_has_content();
  }
}
inline  const ::Tuple& Tuple_Body_ArrayPair_Array_Element::tuple_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.tuple_content)
  return has_tuple_content()
      ? *content_.tuple_content_
      : ::Tuple::default_instance();
}
inline ::Tuple* Tuple_Body_ArrayPair_Array_Element::mutable_tuple_content() {
  if (!has_tuple_content()) {
    clear_content();
    set_has_tuple_content();
    content_.tuple_content_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.tuple_content)
  return content_.tuple_content_;
}
inline ::Tuple* Tuple_Body_ArrayPair_Array_Element::release_tuple_content() {
  if (has_tuple_content()) {
    clear_has_content();
    ::Tuple* temp = content_.tuple_content_;
    content_.tuple_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body_ArrayPair_Array_Element::set_allocated_tuple_content(::Tuple* tuple_content) {
  clear_content();
  if (tuple_content) {
    set_has_tuple_content();
    content_.tuple_content_ = tuple_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.tuple_content)
}

// optional int64 int_content = 4;
inline bool Tuple_Body_ArrayPair_Array_Element::has_int_content() const {
  return content_case() == kIntContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_int_content() {
  _oneof_case_[0] = kIntContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_int_content() {
  if (has_int_content()) {
    content_.int_content_ = GOOGLE_LONGLONG(0);
    clear_has_content();
  }
}
inline ::google::protobuf::int64 Tuple_Body_ArrayPair_Array_Element::int_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.int_content)
  if (has_int_content()) {
    return content_.int_content_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Tuple_Body_ArrayPair_Array_Element::set_int_content(::google::protobuf::int64 value) {
  if (!has_int_content()) {
    clear_content();
    set_has_int_content();
  }
  content_.int_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.int_content)
}

// optional double double_content = 5;
inline bool Tuple_Body_ArrayPair_Array_Element::has_double_content() const {
  return content_case() == kDoubleContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_double_content() {
  _oneof_case_[0] = kDoubleContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_double_content() {
  if (has_double_content()) {
    content_.double_content_ = 0;
    clear_has_content();
  }
}
inline double Tuple_Body_ArrayPair_Array_Element::double_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.double_content)
  if (has_double_content()) {
    return content_.double_content_;
  }
  return 0;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_double_content(double value) {
  if (!has_double_content()) {
    clear_content();
    set_has_double_content();
  }
  content_.double_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.double_content)
}

// optional bool bool_content = 6;
inline bool Tuple_Body_ArrayPair_Array_Element::has_bool_content() const {
  return content_case() == kBoolContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_bool_content() {
  _oneof_case_[0] = kBoolContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_bool_content() {
  if (has_bool_content()) {
    content_.bool_content_ = false;
    clear_has_content();
  }
}
inline bool Tuple_Body_ArrayPair_Array_Element::bool_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.bool_content)
  if (has_bool_content()) {
    return content_.bool_content_;
  }
  return false;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_bool_content(bool value) {
  if (!has_bool_content()) {
    clear_content();
    set_has_bool_content();
  }
  content_.bool_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.bool_content)
}

// optional .Tuple.Body.Null null_content = 7;
inline bool Tuple_Body_ArrayPair_Array_Element::has_null_content() const {
  return content_case() == kNullContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_null_content() {
  _oneof_case_[0] = kNullContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_null_content() {
  if (has_null_content()) {
    content_.null_content_ = 0;
    clear_has_content();
  }
}
inline ::Tuple_Body_Null Tuple_Body_ArrayPair_Array_Element::null_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.null_content)
  if (has_null_content()) {
    return static_cast< ::Tuple_Body_Null >(content_.null_content_);
  }
  return static_cast< ::Tuple_Body_Null >(0);
}
inline void Tuple_Body_ArrayPair_Array_Element::set_null_content(::Tuple_Body_Null value) {
  if (!has_null_content()) {
    clear_content();
    set_has_null_content();
  }
  content_.null_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.null_content)
}

// optional .Tuple.Body.ArrayPair.Array array_content = 8;
inline bool Tuple_Body_ArrayPair_Array_Element::has_array_content() const {
  return content_case() == kArrayContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::set_has_array_content() {
  _oneof_case_[0] = kArrayContent;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_array_content() {
  if (has_array_content()) {
    delete content_.array_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_ArrayPair_Array& Tuple_Body_ArrayPair_Array_Element::array_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.array_content)
  return has_array_content()
      ? *content_.array_content_
      : ::Tuple_Body_ArrayPair_Array::default_instance();
}
inline ::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array_Element::mutable_array_content() {
  if (!has_array_content()) {
    clear_content();
    set_has_array_content();
    content_.array_content_ = new ::Tuple_Body_ArrayPair_Array;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.array_content)
  return content_.array_content_;
}
inline ::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array_Element::release_array_content() {
  if (has_array_content()) {
    clear_has_content();
    ::Tuple_Body_ArrayPair_Array* temp = content_.array_content_;
    content_.array_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body_ArrayPair_Array_Element::set_allocated_array_content(::Tuple_Body_ArrayPair_Array* array_content) {
  clear_content();
  if (array_content) {
    set_has_array_content();
    content_.array_content_ = array_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.array_content)
}

inline bool Tuple_Body_ArrayPair_Array_Element::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void Tuple_Body_ArrayPair_Array_Element::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline Tuple_Body_ArrayPair_Array_Element::ContentCase Tuple_Body_ArrayPair_Array_Element::content_case() const {
  return Tuple_Body_ArrayPair_Array_Element::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Tuple_Body_ArrayPair_Array

// repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
inline int Tuple_Body_ArrayPair_Array::element_size() const {
  return element_.size();
}
inline void Tuple_Body_ArrayPair_Array::clear_element() {
  element_.Clear();
}
inline const ::Tuple_Body_ArrayPair_Array_Element& Tuple_Body_ArrayPair_Array::element(int index) const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.element)
  return element_.Get(index);
}
inline ::Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.element)
  return element_.Mutable(index);
}
inline ::Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array::add_element() {
  // @@protoc_insertion_point(field_add:Tuple.Body.ArrayPair.Array.element)
  return element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >*
Tuple_Body_ArrayPair_Array::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:Tuple.Body.ArrayPair.Array.element)
  return &element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >&
Tuple_Body_ArrayPair_Array::element() const {
  // @@protoc_insertion_point(field_list:Tuple.Body.ArrayPair.Array.element)
  return element_;
}

// -------------------------------------------------------------------

// Tuple_Body_ArrayPair

// optional string key = 1;
inline void Tuple_Body_ArrayPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple_Body_ArrayPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_ArrayPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.key)
}
inline void Tuple_Body_ArrayPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.ArrayPair.key)
}
inline void Tuple_Body_ArrayPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.ArrayPair.key)
}
inline ::std::string* Tuple_Body_ArrayPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body_ArrayPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple_Body_ArrayPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.key)
}

// optional .Tuple.Body.ArrayPair.Array value = 2;
inline bool Tuple_Body_ArrayPair::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
inline void Tuple_Body_ArrayPair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::Tuple_Body_ArrayPair_Array& Tuple_Body_ArrayPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::Tuple_Body_ArrayPair_Array;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.value)
  return value_;
}
inline ::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair::release_value() {
  
  ::Tuple_Body_ArrayPair_Array* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Tuple_Body_ArrayPair::set_allocated_value(::Tuple_Body_ArrayPair_Array* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body

// optional string string_content = 1;
inline bool Tuple_Body::has_string_content() const {
  return content_case() == kStringContent;
}
inline void Tuple_Body::set_has_string_content() {
  _oneof_case_[0] = kStringContent;
}
inline void Tuple_Body::clear_string_content() {
  if (has_string_content()) {
    content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
inline const ::std::string& Tuple_Body::string_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.string_content)
  if (has_string_content()) {
    return content_.string_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Tuple_Body::set_string_content(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Tuple.Body.string_content)
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.string_content)
}
inline void Tuple_Body::set_string_content(const char* value) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.string_content)
}
inline void Tuple_Body::set_string_content(const char* value, size_t size) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.string_content)
}
inline ::std::string* Tuple_Body::mutable_string_content() {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.string_content)
  return content_.string_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple_Body::release_string_content() {
  if (has_string_content()) {
    clear_has_content();
    return content_.string_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_string_content(::std::string* string_content) {
  if (!has_string_content()) {
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (string_content != NULL) {
    set_has_string_content();
    content_.string_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_content);
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.string_content)
}

// optional .Tuple tuple_content = 2;
inline bool Tuple_Body::has_tuple_content() const {
  return content_case() == kTupleContent;
}
inline void Tuple_Body::set_has_tuple_content() {
  _oneof_case_[0] = kTupleContent;
}
inline void Tuple_Body::clear_tuple_content() {
  if (has_tuple_content()) {
    delete content_.tuple_content_;
    clear_has_content();
  }
}
inline  const ::Tuple& Tuple_Body::tuple_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.tuple_content)
  return has_tuple_content()
      ? *content_.tuple_content_
      : ::Tuple::default_instance();
}
inline ::Tuple* Tuple_Body::mutable_tuple_content() {
  if (!has_tuple_content()) {
    clear_content();
    set_has_tuple_content();
    content_.tuple_content_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.tuple_content)
  return content_.tuple_content_;
}
inline ::Tuple* Tuple_Body::release_tuple_content() {
  if (has_tuple_content()) {
    clear_has_content();
    ::Tuple* temp = content_.tuple_content_;
    content_.tuple_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_tuple_content(::Tuple* tuple_content) {
  clear_content();
  if (tuple_content) {
    set_has_tuple_content();
    content_.tuple_content_ = tuple_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.tuple_content)
}

// optional .Tuple.Body.StringPair string_pair_content = 3;
inline bool Tuple_Body::has_string_pair_content() const {
  return content_case() == kStringPairContent;
}
inline void Tuple_Body::set_has_string_pair_content() {
  _oneof_case_[0] = kStringPairContent;
}
inline void Tuple_Body::clear_string_pair_content() {
  if (has_string_pair_content()) {
    delete content_.string_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_StringPair& Tuple_Body::string_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.string_pair_content)
  return has_string_pair_content()
      ? *content_.string_pair_content_
      : ::Tuple_Body_StringPair::default_instance();
}
inline ::Tuple_Body_StringPair* Tuple_Body::mutable_string_pair_content() {
  if (!has_string_pair_content()) {
    clear_content();
    set_has_string_pair_content();
    content_.string_pair_content_ = new ::Tuple_Body_StringPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.string_pair_content)
  return content_.string_pair_content_;
}
inline ::Tuple_Body_StringPair* Tuple_Body::release_string_pair_content() {
  if (has_string_pair_content()) {
    clear_has_content();
    ::Tuple_Body_StringPair* temp = content_.string_pair_content_;
    content_.string_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_string_pair_content(::Tuple_Body_StringPair* string_pair_content) {
  clear_content();
  if (string_pair_content) {
    set_has_string_pair_content();
    content_.string_pair_content_ = string_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.string_pair_content)
}

// optional .Tuple.Body.IntPair int_pair_content = 4;
inline bool Tuple_Body::has_int_pair_content() const {
  return content_case() == kIntPairContent;
}
inline void Tuple_Body::set_has_int_pair_content() {
  _oneof_case_[0] = kIntPairContent;
}
inline void Tuple_Body::clear_int_pair_content() {
  if (has_int_pair_content()) {
    delete content_.int_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_IntPair& Tuple_Body::int_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.int_pair_content)
  return has_int_pair_content()
      ? *content_.int_pair_content_
      : ::Tuple_Body_IntPair::default_instance();
}
inline ::Tuple_Body_IntPair* Tuple_Body::mutable_int_pair_content() {
  if (!has_int_pair_content()) {
    clear_content();
    set_has_int_pair_content();
    content_.int_pair_content_ = new ::Tuple_Body_IntPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.int_pair_content)
  return content_.int_pair_content_;
}
inline ::Tuple_Body_IntPair* Tuple_Body::release_int_pair_content() {
  if (has_int_pair_content()) {
    clear_has_content();
    ::Tuple_Body_IntPair* temp = content_.int_pair_content_;
    content_.int_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_int_pair_content(::Tuple_Body_IntPair* int_pair_content) {
  clear_content();
  if (int_pair_content) {
    set_has_int_pair_content();
    content_.int_pair_content_ = int_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.int_pair_content)
}

// optional .Tuple.Body.DoublePair double_pair_content = 5;
inline bool Tuple_Body::has_double_pair_content() const {
  return content_case() == kDoublePairContent;
}
inline void Tuple_Body::set_has_double_pair_content() {
  _oneof_case_[0] = kDoublePairContent;
}
inline void Tuple_Body::clear_double_pair_content() {
  if (has_double_pair_content()) {
    delete content_.double_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_DoublePair& Tuple_Body::double_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.double_pair_content)
  return has_double_pair_content()
      ? *content_.double_pair_content_
      : ::Tuple_Body_DoublePair::default_instance();
}
inline ::Tuple_Body_DoublePair* Tuple_Body::mutable_double_pair_content() {
  if (!has_double_pair_content()) {
    clear_content();
    set_has_double_pair_content();
    content_.double_pair_content_ = new ::Tuple_Body_DoublePair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.double_pair_content)
  return content_.double_pair_content_;
}
inline ::Tuple_Body_DoublePair* Tuple_Body::release_double_pair_content() {
  if (has_double_pair_content()) {
    clear_has_content();
    ::Tuple_Body_DoublePair* temp = content_.double_pair_content_;
    content_.double_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_double_pair_content(::Tuple_Body_DoublePair* double_pair_content) {
  clear_content();
  if (double_pair_content) {
    set_has_double_pair_content();
    content_.double_pair_content_ = double_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.double_pair_content)
}

// optional .Tuple.Body.BoolPair bool_pair_content = 6;
inline bool Tuple_Body::has_bool_pair_content() const {
  return content_case() == kBoolPairContent;
}
inline void Tuple_Body::set_has_bool_pair_content() {
  _oneof_case_[0] = kBoolPairContent;
}
inline void Tuple_Body::clear_bool_pair_content() {
  if (has_bool_pair_content()) {
    delete content_.bool_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_BoolPair& Tuple_Body::bool_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.bool_pair_content)
  return has_bool_pair_content()
      ? *content_.bool_pair_content_
      : ::Tuple_Body_BoolPair::default_instance();
}
inline ::Tuple_Body_BoolPair* Tuple_Body::mutable_bool_pair_content() {
  if (!has_bool_pair_content()) {
    clear_content();
    set_has_bool_pair_content();
    content_.bool_pair_content_ = new ::Tuple_Body_BoolPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.bool_pair_content)
  return content_.bool_pair_content_;
}
inline ::Tuple_Body_BoolPair* Tuple_Body::release_bool_pair_content() {
  if (has_bool_pair_content()) {
    clear_has_content();
    ::Tuple_Body_BoolPair* temp = content_.bool_pair_content_;
    content_.bool_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_bool_pair_content(::Tuple_Body_BoolPair* bool_pair_content) {
  clear_content();
  if (bool_pair_content) {
    set_has_bool_pair_content();
    content_.bool_pair_content_ = bool_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.bool_pair_content)
}

// optional .Tuple.Body.TuplePair tuple_pair_content = 7;
inline bool Tuple_Body::has_tuple_pair_content() const {
  return content_case() == kTuplePairContent;
}
inline void Tuple_Body::set_has_tuple_pair_content() {
  _oneof_case_[0] = kTuplePairContent;
}
inline void Tuple_Body::clear_tuple_pair_content() {
  if (has_tuple_pair_content()) {
    delete content_.tuple_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_TuplePair& Tuple_Body::tuple_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.tuple_pair_content)
  return has_tuple_pair_content()
      ? *content_.tuple_pair_content_
      : ::Tuple_Body_TuplePair::default_instance();
}
inline ::Tuple_Body_TuplePair* Tuple_Body::mutable_tuple_pair_content() {
  if (!has_tuple_pair_content()) {
    clear_content();
    set_has_tuple_pair_content();
    content_.tuple_pair_content_ = new ::Tuple_Body_TuplePair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.tuple_pair_content)
  return content_.tuple_pair_content_;
}
inline ::Tuple_Body_TuplePair* Tuple_Body::release_tuple_pair_content() {
  if (has_tuple_pair_content()) {
    clear_has_content();
    ::Tuple_Body_TuplePair* temp = content_.tuple_pair_content_;
    content_.tuple_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_tuple_pair_content(::Tuple_Body_TuplePair* tuple_pair_content) {
  clear_content();
  if (tuple_pair_content) {
    set_has_tuple_pair_content();
    content_.tuple_pair_content_ = tuple_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.tuple_pair_content)
}

// optional .Tuple.Body.NullPair null_pair_content = 8;
inline bool Tuple_Body::has_null_pair_content() const {
  return content_case() == kNullPairContent;
}
inline void Tuple_Body::set_has_null_pair_content() {
  _oneof_case_[0] = kNullPairContent;
}
inline void Tuple_Body::clear_null_pair_content() {
  if (has_null_pair_content()) {
    delete content_.null_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_NullPair& Tuple_Body::null_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.null_pair_content)
  return has_null_pair_content()
      ? *content_.null_pair_content_
      : ::Tuple_Body_NullPair::default_instance();
}
inline ::Tuple_Body_NullPair* Tuple_Body::mutable_null_pair_content() {
  if (!has_null_pair_content()) {
    clear_content();
    set_has_null_pair_content();
    content_.null_pair_content_ = new ::Tuple_Body_NullPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.null_pair_content)
  return content_.null_pair_content_;
}
inline ::Tuple_Body_NullPair* Tuple_Body::release_null_pair_content() {
  if (has_null_pair_content()) {
    clear_has_content();
    ::Tuple_Body_NullPair* temp = content_.null_pair_content_;
    content_.null_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_null_pair_content(::Tuple_Body_NullPair* null_pair_content) {
  clear_content();
  if (null_pair_content) {
    set_has_null_pair_content();
    content_.null_pair_content_ = null_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.null_pair_content)
}

// optional .Tuple.Body.ArrayPair array_pair_content = 9;
inline bool Tuple_Body::has_array_pair_content() const {
  return content_case() == kArrayPairContent;
}
inline void Tuple_Body::set_has_array_pair_content() {
  _oneof_case_[0] = kArrayPairContent;
}
inline void Tuple_Body::clear_array_pair_content() {
  if (has_array_pair_content()) {
    delete content_.array_pair_content_;
    clear_has_content();
  }
}
inline  const ::Tuple_Body_ArrayPair& Tuple_Body::array_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.array_pair_content)
  return has_array_pair_content()
      ? *content_.array_pair_content_
      : ::Tuple_Body_ArrayPair::default_instance();
}
inline ::Tuple_Body_ArrayPair* Tuple_Body::mutable_array_pair_content() {
  if (!has_array_pair_content()) {
    clear_content();
    set_has_array_pair_content();
    content_.array_pair_content_ = new ::Tuple_Body_ArrayPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.array_pair_content)
  return content_.array_pair_content_;
}
inline ::Tuple_Body_ArrayPair* Tuple_Body::release_array_pair_content() {
  if (has_array_pair_content()) {
    clear_has_content();
    ::Tuple_Body_ArrayPair* temp = content_.array_pair_content_;
    content_.array_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Tuple_Body::set_allocated_array_pair_content(::Tuple_Body_ArrayPair* array_pair_content) {
  clear_content();
  if (array_pair_content) {
    set_has_array_pair_content();
    content_.array_pair_content_ = array_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.array_pair_content)
}

inline bool Tuple_Body::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void Tuple_Body::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline Tuple_Body::ContentCase Tuple_Body::content_case() const {
  return Tuple_Body::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Tuple

// optional string tag = 1;
inline void Tuple::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::tag() const {
  // @@protoc_insertion_point(field_get:Tuple.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.tag)
}
inline void Tuple::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.tag)
}
inline void Tuple::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.tag)
}
inline ::std::string* Tuple::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_tag() {
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:Tuple.tag)
}

// map<string, string> attr = 2;
inline int Tuple::attr_size() const {
  return attr_.size();
}
inline void Tuple::clear_attr() {
  attr_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Tuple::attr() const {
  // @@protoc_insertion_point(field_map:Tuple.attr)
  return attr_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Tuple::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_map:Tuple.attr)
  return attr_.MutableMap();
}

// repeated .Tuple.Body body = 3;
inline int Tuple::body_size() const {
  return body_.size();
}
inline void Tuple::clear_body() {
  body_.Clear();
}
inline const ::Tuple_Body& Tuple::body(int index) const {
  // @@protoc_insertion_point(field_get:Tuple.body)
  return body_.Get(index);
}
inline ::Tuple_Body* Tuple::mutable_body(int index) {
  // @@protoc_insertion_point(field_mutable:Tuple.body)
  return body_.Mutable(index);
}
inline ::Tuple_Body* Tuple::add_body() {
  // @@protoc_insertion_point(field_add:Tuple.body)
  return body_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Tuple_Body >*
Tuple::mutable_body() {
  // @@protoc_insertion_point(field_mutable_list:Tuple.body)
  return &body_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Tuple_Body >&
Tuple::body() const {
  // @@protoc_insertion_point(field_list:Tuple.body)
  return body_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Tuple_Body_Null> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Tuple_Body_Null>() {
  return ::Tuple_Body_Null_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pirf_2eproto__INCLUDED

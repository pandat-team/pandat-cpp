// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pirf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pirf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Tuple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_reflection_ = NULL;
struct Tuple_BodyOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr string_content_;
  const ::Tuple* tuple_content_;
  const ::Tuple_Body_StringPair* string_pair_content_;
  const ::Tuple_Body_IntPair* int_pair_content_;
  const ::Tuple_Body_DoublePair* double_pair_content_;
  const ::Tuple_Body_BoolPair* bool_pair_content_;
  const ::Tuple_Body_TuplePair* tuple_pair_content_;
  const ::Tuple_Body_NullPair* null_pair_content_;
  const ::Tuple_Body_ArrayPair* array_pair_content_;
}* Tuple_Body_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_StringPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_StringPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_IntPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_IntPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_DoublePair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_DoublePair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_BoolPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_BoolPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_TuplePair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_TuplePair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_NullPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_NullPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_ArrayPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair_Array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_ArrayPair_Array_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair_Array_Element_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_Body_ArrayPair_Array_Element_reflection_ = NULL;
struct Tuple_Body_ArrayPair_Array_ElementOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr string_content_;
  const ::Tuple* tuple_content_;
  ::google::protobuf::int64 int_content_;
  double double_content_;
  bool bool_content_;
  int null_content_;
  const ::Tuple_Body_ArrayPair_Array* array_content_;
}* Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* Tuple_Body_Null_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Tuple_AttrEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_pirf_2eproto() {
  protobuf_AddDesc_pirf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pirf.proto");
  GOOGLE_CHECK(file != NULL);
  Tuple_descriptor_ = file->message_type(0);
  static const int Tuple_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, body_),
  };
  Tuple_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_descriptor_,
      Tuple::default_instance_,
      Tuple_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, _is_default_instance_));
  Tuple_Body_descriptor_ = Tuple_descriptor_->nested_type(0);
  static const int Tuple_Body_offsets_[10] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, string_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, tuple_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, string_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, int_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, double_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, bool_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, tuple_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, null_pair_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_default_oneof_instance_, array_pair_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body, content_),
  };
  Tuple_Body_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_descriptor_,
      Tuple_Body::default_instance_,
      Tuple_Body_offsets_,
      -1,
      -1,
      -1,
      Tuple_Body_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body, _oneof_case_[0]),
      sizeof(Tuple_Body),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body, _is_default_instance_));
  Tuple_Body_StringPair_descriptor_ = Tuple_Body_descriptor_->nested_type(0);
  static const int Tuple_Body_StringPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_StringPair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_StringPair, value_),
  };
  Tuple_Body_StringPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_StringPair_descriptor_,
      Tuple_Body_StringPair::default_instance_,
      Tuple_Body_StringPair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_StringPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_StringPair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_StringPair, _is_default_instance_));
  Tuple_Body_IntPair_descriptor_ = Tuple_Body_descriptor_->nested_type(1);
  static const int Tuple_Body_IntPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_IntPair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_IntPair, value_),
  };
  Tuple_Body_IntPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_IntPair_descriptor_,
      Tuple_Body_IntPair::default_instance_,
      Tuple_Body_IntPair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_IntPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_IntPair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_IntPair, _is_default_instance_));
  Tuple_Body_DoublePair_descriptor_ = Tuple_Body_descriptor_->nested_type(2);
  static const int Tuple_Body_DoublePair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_DoublePair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_DoublePair, value_),
  };
  Tuple_Body_DoublePair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_DoublePair_descriptor_,
      Tuple_Body_DoublePair::default_instance_,
      Tuple_Body_DoublePair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_DoublePair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_DoublePair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_DoublePair, _is_default_instance_));
  Tuple_Body_BoolPair_descriptor_ = Tuple_Body_descriptor_->nested_type(3);
  static const int Tuple_Body_BoolPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_BoolPair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_BoolPair, value_),
  };
  Tuple_Body_BoolPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_BoolPair_descriptor_,
      Tuple_Body_BoolPair::default_instance_,
      Tuple_Body_BoolPair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_BoolPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_BoolPair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_BoolPair, _is_default_instance_));
  Tuple_Body_TuplePair_descriptor_ = Tuple_Body_descriptor_->nested_type(4);
  static const int Tuple_Body_TuplePair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_TuplePair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_TuplePair, value_),
  };
  Tuple_Body_TuplePair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_TuplePair_descriptor_,
      Tuple_Body_TuplePair::default_instance_,
      Tuple_Body_TuplePair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_TuplePair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_TuplePair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_TuplePair, _is_default_instance_));
  Tuple_Body_NullPair_descriptor_ = Tuple_Body_descriptor_->nested_type(5);
  static const int Tuple_Body_NullPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_NullPair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_NullPair, value_),
  };
  Tuple_Body_NullPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_NullPair_descriptor_,
      Tuple_Body_NullPair::default_instance_,
      Tuple_Body_NullPair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_NullPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_NullPair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_NullPair, _is_default_instance_));
  Tuple_Body_ArrayPair_descriptor_ = Tuple_Body_descriptor_->nested_type(6);
  static const int Tuple_Body_ArrayPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair, value_),
  };
  Tuple_Body_ArrayPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_ArrayPair_descriptor_,
      Tuple_Body_ArrayPair::default_instance_,
      Tuple_Body_ArrayPair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_ArrayPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair, _is_default_instance_));
  Tuple_Body_ArrayPair_Array_descriptor_ = Tuple_Body_ArrayPair_descriptor_->nested_type(0);
  static const int Tuple_Body_ArrayPair_Array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array, element_),
  };
  Tuple_Body_ArrayPair_Array_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_ArrayPair_Array_descriptor_,
      Tuple_Body_ArrayPair_Array::default_instance_,
      Tuple_Body_ArrayPair_Array_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tuple_Body_ArrayPair_Array),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array, _is_default_instance_));
  Tuple_Body_ArrayPair_Array_Element_descriptor_ = Tuple_Body_ArrayPair_Array_descriptor_->nested_type(0);
  static const int Tuple_Body_ArrayPair_Array_Element_offsets_[8] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, string_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, tuple_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, int_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, double_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, bool_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, null_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_, array_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element, content_),
  };
  Tuple_Body_ArrayPair_Array_Element_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tuple_Body_ArrayPair_Array_Element_descriptor_,
      Tuple_Body_ArrayPair_Array_Element::default_instance_,
      Tuple_Body_ArrayPair_Array_Element_offsets_,
      -1,
      -1,
      -1,
      Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element, _oneof_case_[0]),
      sizeof(Tuple_Body_ArrayPair_Array_Element),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple_Body_ArrayPair_Array_Element, _is_default_instance_));
  Tuple_Body_Null_descriptor_ = Tuple_Body_descriptor_->enum_type(0);
  Tuple_AttrEntry_descriptor_ = Tuple_descriptor_->nested_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pirf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_descriptor_, &Tuple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_descriptor_, &Tuple_Body::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_StringPair_descriptor_, &Tuple_Body_StringPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_IntPair_descriptor_, &Tuple_Body_IntPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_DoublePair_descriptor_, &Tuple_Body_DoublePair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_BoolPair_descriptor_, &Tuple_Body_BoolPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_TuplePair_descriptor_, &Tuple_Body_TuplePair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_NullPair_descriptor_, &Tuple_Body_NullPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_ArrayPair_descriptor_, &Tuple_Body_ArrayPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_ArrayPair_Array_descriptor_, &Tuple_Body_ArrayPair_Array::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tuple_Body_ArrayPair_Array_Element_descriptor_, &Tuple_Body_ArrayPair_Array_Element::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Tuple_AttrEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                Tuple_AttrEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_pirf_2eproto() {
  delete Tuple::default_instance_;
  delete Tuple_reflection_;
  delete Tuple_Body::default_instance_;
  delete Tuple_Body_default_oneof_instance_;
  delete Tuple_Body_reflection_;
  delete Tuple_Body_StringPair::default_instance_;
  delete Tuple_Body_StringPair_reflection_;
  delete Tuple_Body_IntPair::default_instance_;
  delete Tuple_Body_IntPair_reflection_;
  delete Tuple_Body_DoublePair::default_instance_;
  delete Tuple_Body_DoublePair_reflection_;
  delete Tuple_Body_BoolPair::default_instance_;
  delete Tuple_Body_BoolPair_reflection_;
  delete Tuple_Body_TuplePair::default_instance_;
  delete Tuple_Body_TuplePair_reflection_;
  delete Tuple_Body_NullPair::default_instance_;
  delete Tuple_Body_NullPair_reflection_;
  delete Tuple_Body_ArrayPair::default_instance_;
  delete Tuple_Body_ArrayPair_reflection_;
  delete Tuple_Body_ArrayPair_Array::default_instance_;
  delete Tuple_Body_ArrayPair_Array_reflection_;
  delete Tuple_Body_ArrayPair_Array_Element::default_instance_;
  delete Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_;
  delete Tuple_Body_ArrayPair_Array_Element_reflection_;
}

void protobuf_AddDesc_pirf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\npirf.proto\"\342\t\n\005Tuple\022\013\n\003tag\030\001 \001(\t\022\036\n\004a"
    "ttr\030\002 \003(\0132\020.Tuple.AttrEntry\022\031\n\004body\030\003 \003("
    "\0132\013.Tuple.Body\032\343\010\n\004Body\022\030\n\016string_conten"
    "t\030\001 \001(\tH\000\022\037\n\rtuple_content\030\002 \001(\0132\006.Tuple"
    "H\000\0225\n\023string_pair_content\030\003 \001(\0132\026.Tuple."
    "Body.StringPairH\000\022/\n\020int_pair_content\030\004 "
    "\001(\0132\023.Tuple.Body.IntPairH\000\0225\n\023double_pai"
    "r_content\030\005 \001(\0132\026.Tuple.Body.DoublePairH"
    "\000\0221\n\021bool_pair_content\030\006 \001(\0132\024.Tuple.Bod"
    "y.BoolPairH\000\0223\n\022tuple_pair_content\030\007 \001(\013"
    "2\025.Tuple.Body.TuplePairH\000\0221\n\021null_pair_c"
    "ontent\030\010 \001(\0132\024.Tuple.Body.NullPairH\000\0223\n\022"
    "array_pair_content\030\t \001(\0132\025.Tuple.Body.Ar"
    "rayPairH\000\032(\n\nStringPair\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t\032%\n\007IntPair\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\003\032(\n\nDoublePair\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\001\032&\n\010BoolPair\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\010\032/\n\tTuplePair\022\013\n\003key\030\001 \001(\t\022\025"
    "\n\005value\030\002 \001(\0132\006.Tuple\0328\n\010NullPair\022\013\n\003key"
    "\030\001 \001(\t\022\037\n\005value\030\002 \001(\0162\020.Tuple.Body.Null\032"
    "\377\002\n\tArrayPair\022\013\n\003key\030\001 \001(\t\022*\n\005value\030\002 \001("
    "\0132\033.Tuple.Body.ArrayPair.Array\032\270\002\n\005Array"
    "\0224\n\007element\030\001 \003(\0132#.Tuple.Body.ArrayPair"
    ".Array.Element\032\370\001\n\007Element\022\030\n\016string_con"
    "tent\030\001 \001(\tH\000\022\037\n\rtuple_content\030\002 \001(\0132\006.Tu"
    "pleH\000\022\025\n\013int_content\030\004 \001(\003H\000\022\030\n\016double_c"
    "ontent\030\005 \001(\001H\000\022\026\n\014bool_content\030\006 \001(\010H\000\022("
    "\n\014null_content\030\007 \001(\0162\020.Tuple.Body.NullH\000"
    "\0224\n\rarray_content\030\010 \001(\0132\033.Tuple.Body.Arr"
    "ayPair.ArrayH\000B\t\n\007content\"\026\n\004Null\022\016\n\nNUL"
    "L_VALUE\020\000B\t\n\007content\032+\n\tAttrEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001b\006proto3", 1273);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pirf.proto", &protobuf_RegisterTypes);
  Tuple::default_instance_ = new Tuple();
  Tuple_Body::default_instance_ = new Tuple_Body();
  Tuple_Body_default_oneof_instance_ = new Tuple_BodyOneofInstance();
  Tuple_Body_StringPair::default_instance_ = new Tuple_Body_StringPair();
  Tuple_Body_IntPair::default_instance_ = new Tuple_Body_IntPair();
  Tuple_Body_DoublePair::default_instance_ = new Tuple_Body_DoublePair();
  Tuple_Body_BoolPair::default_instance_ = new Tuple_Body_BoolPair();
  Tuple_Body_TuplePair::default_instance_ = new Tuple_Body_TuplePair();
  Tuple_Body_NullPair::default_instance_ = new Tuple_Body_NullPair();
  Tuple_Body_ArrayPair::default_instance_ = new Tuple_Body_ArrayPair();
  Tuple_Body_ArrayPair_Array::default_instance_ = new Tuple_Body_ArrayPair_Array();
  Tuple_Body_ArrayPair_Array_Element::default_instance_ = new Tuple_Body_ArrayPair_Array_Element();
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_ = new Tuple_Body_ArrayPair_Array_ElementOneofInstance();
  Tuple::default_instance_->InitAsDefaultInstance();
  Tuple_Body::default_instance_->InitAsDefaultInstance();
  Tuple_Body_StringPair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_IntPair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_DoublePair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_BoolPair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_TuplePair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_NullPair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_ArrayPair::default_instance_->InitAsDefaultInstance();
  Tuple_Body_ArrayPair_Array::default_instance_->InitAsDefaultInstance();
  Tuple_Body_ArrayPair_Array_Element::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pirf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pirf_2eproto {
  StaticDescriptorInitializer_pirf_2eproto() {
    protobuf_AddDesc_pirf_2eproto();
  }
} static_descriptor_initializer_pirf_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Tuple_Body_Null_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_Null_descriptor_;
}
bool Tuple_Body_Null_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Tuple_Body_Null Tuple_Body::NULL_VALUE;
const Tuple_Body_Null Tuple_Body::Null_MIN;
const Tuple_Body_Null Tuple_Body::Null_MAX;
const int Tuple_Body::Null_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_StringPair::kKeyFieldNumber;
const int Tuple_Body_StringPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_StringPair::Tuple_Body_StringPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.StringPair)
}

void Tuple_Body_StringPair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_StringPair::Tuple_Body_StringPair(const Tuple_Body_StringPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.StringPair)
}

void Tuple_Body_StringPair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Tuple_Body_StringPair::~Tuple_Body_StringPair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.StringPair)
  SharedDtor();
}

void Tuple_Body_StringPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple_Body_StringPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_StringPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_StringPair_descriptor_;
}

const Tuple_Body_StringPair& Tuple_Body_StringPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_StringPair* Tuple_Body_StringPair::default_instance_ = NULL;

Tuple_Body_StringPair* Tuple_Body_StringPair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_StringPair* n = new Tuple_Body_StringPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_StringPair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Tuple_Body_StringPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.StringPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.StringPair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.StringPair.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.StringPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.StringPair)
  return false;
#undef DO_
}

void Tuple_Body_StringPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.StringPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.StringPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.StringPair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.StringPair)
}

::google::protobuf::uint8* Tuple_Body_StringPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.StringPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.StringPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.StringPair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.StringPair)
  return target;
}

int Tuple_Body_StringPair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_StringPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_StringPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_StringPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_StringPair::MergeFrom(const Tuple_Body_StringPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Tuple_Body_StringPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_StringPair::CopyFrom(const Tuple_Body_StringPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_StringPair::IsInitialized() const {

  return true;
}

void Tuple_Body_StringPair::Swap(Tuple_Body_StringPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_StringPair::InternalSwap(Tuple_Body_StringPair* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_StringPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_StringPair_descriptor_;
  metadata.reflection = Tuple_Body_StringPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_IntPair::kKeyFieldNumber;
const int Tuple_Body_IntPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_IntPair::Tuple_Body_IntPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.IntPair)
}

void Tuple_Body_IntPair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_IntPair::Tuple_Body_IntPair(const Tuple_Body_IntPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.IntPair)
}

void Tuple_Body_IntPair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
}

Tuple_Body_IntPair::~Tuple_Body_IntPair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.IntPair)
  SharedDtor();
}

void Tuple_Body_IntPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple_Body_IntPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_IntPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_IntPair_descriptor_;
}

const Tuple_Body_IntPair& Tuple_Body_IntPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_IntPair* Tuple_Body_IntPair::default_instance_ = NULL;

Tuple_Body_IntPair* Tuple_Body_IntPair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_IntPair* n = new Tuple_Body_IntPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_IntPair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
}

bool Tuple_Body_IntPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.IntPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.IntPair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.IntPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.IntPair)
  return false;
#undef DO_
}

void Tuple_Body_IntPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.IntPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.IntPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.IntPair)
}

::google::protobuf::uint8* Tuple_Body_IntPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.IntPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.IntPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.IntPair)
  return target;
}

int Tuple_Body_IntPair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_IntPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_IntPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_IntPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_IntPair::MergeFrom(const Tuple_Body_IntPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Tuple_Body_IntPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_IntPair::CopyFrom(const Tuple_Body_IntPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_IntPair::IsInitialized() const {

  return true;
}

void Tuple_Body_IntPair::Swap(Tuple_Body_IntPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_IntPair::InternalSwap(Tuple_Body_IntPair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_IntPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_IntPair_descriptor_;
  metadata.reflection = Tuple_Body_IntPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_DoublePair::kKeyFieldNumber;
const int Tuple_Body_DoublePair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_DoublePair::Tuple_Body_DoublePair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.DoublePair)
}

void Tuple_Body_DoublePair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_DoublePair::Tuple_Body_DoublePair(const Tuple_Body_DoublePair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.DoublePair)
}

void Tuple_Body_DoublePair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

Tuple_Body_DoublePair::~Tuple_Body_DoublePair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.DoublePair)
  SharedDtor();
}

void Tuple_Body_DoublePair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple_Body_DoublePair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_DoublePair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_DoublePair_descriptor_;
}

const Tuple_Body_DoublePair& Tuple_Body_DoublePair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_DoublePair* Tuple_Body_DoublePair::default_instance_ = NULL;

Tuple_Body_DoublePair* Tuple_Body_DoublePair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_DoublePair* n = new Tuple_Body_DoublePair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_DoublePair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

bool Tuple_Body_DoublePair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.DoublePair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.DoublePair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_value;
        break;
      }

      // optional double value = 2;
      case 2: {
        if (tag == 17) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.DoublePair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.DoublePair)
  return false;
#undef DO_
}

void Tuple_Body_DoublePair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.DoublePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.DoublePair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.DoublePair)
}

::google::protobuf::uint8* Tuple_Body_DoublePair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.DoublePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.DoublePair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.DoublePair)
  return target;
}

int Tuple_Body_DoublePair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_DoublePair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_DoublePair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_DoublePair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_DoublePair::MergeFrom(const Tuple_Body_DoublePair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Tuple_Body_DoublePair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_DoublePair::CopyFrom(const Tuple_Body_DoublePair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_DoublePair::IsInitialized() const {

  return true;
}

void Tuple_Body_DoublePair::Swap(Tuple_Body_DoublePair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_DoublePair::InternalSwap(Tuple_Body_DoublePair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_DoublePair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_DoublePair_descriptor_;
  metadata.reflection = Tuple_Body_DoublePair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_BoolPair::kKeyFieldNumber;
const int Tuple_Body_BoolPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_BoolPair::Tuple_Body_BoolPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.BoolPair)
}

void Tuple_Body_BoolPair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_BoolPair::Tuple_Body_BoolPair(const Tuple_Body_BoolPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.BoolPair)
}

void Tuple_Body_BoolPair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = false;
}

Tuple_Body_BoolPair::~Tuple_Body_BoolPair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.BoolPair)
  SharedDtor();
}

void Tuple_Body_BoolPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple_Body_BoolPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_BoolPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_BoolPair_descriptor_;
}

const Tuple_Body_BoolPair& Tuple_Body_BoolPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_BoolPair* Tuple_Body_BoolPair::default_instance_ = NULL;

Tuple_Body_BoolPair* Tuple_Body_BoolPair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_BoolPair* n = new Tuple_Body_BoolPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_BoolPair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = false;
}

bool Tuple_Body_BoolPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.BoolPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.BoolPair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional bool value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.BoolPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.BoolPair)
  return false;
#undef DO_
}

void Tuple_Body_BoolPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.BoolPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.BoolPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.BoolPair)
}

::google::protobuf::uint8* Tuple_Body_BoolPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.BoolPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.BoolPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.BoolPair)
  return target;
}

int Tuple_Body_BoolPair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional bool value = 2;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_BoolPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_BoolPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_BoolPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_BoolPair::MergeFrom(const Tuple_Body_BoolPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Tuple_Body_BoolPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_BoolPair::CopyFrom(const Tuple_Body_BoolPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_BoolPair::IsInitialized() const {

  return true;
}

void Tuple_Body_BoolPair::Swap(Tuple_Body_BoolPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_BoolPair::InternalSwap(Tuple_Body_BoolPair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_BoolPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_BoolPair_descriptor_;
  metadata.reflection = Tuple_Body_BoolPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_TuplePair::kKeyFieldNumber;
const int Tuple_Body_TuplePair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_TuplePair::Tuple_Body_TuplePair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.TuplePair)
}

void Tuple_Body_TuplePair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  value_ = const_cast< ::Tuple*>(&::Tuple::default_instance());
}

Tuple_Body_TuplePair::Tuple_Body_TuplePair(const Tuple_Body_TuplePair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.TuplePair)
}

void Tuple_Body_TuplePair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

Tuple_Body_TuplePair::~Tuple_Body_TuplePair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.TuplePair)
  SharedDtor();
}

void Tuple_Body_TuplePair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
  }
}

void Tuple_Body_TuplePair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_TuplePair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_TuplePair_descriptor_;
}

const Tuple_Body_TuplePair& Tuple_Body_TuplePair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_TuplePair* Tuple_Body_TuplePair::default_instance_ = NULL;

Tuple_Body_TuplePair* Tuple_Body_TuplePair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_TuplePair* n = new Tuple_Body_TuplePair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_TuplePair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}

bool Tuple_Body_TuplePair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.TuplePair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.TuplePair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .Tuple value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.TuplePair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.TuplePair)
  return false;
#undef DO_
}

void Tuple_Body_TuplePair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.TuplePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.TuplePair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .Tuple value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.TuplePair)
}

::google::protobuf::uint8* Tuple_Body_TuplePair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.TuplePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.TuplePair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .Tuple value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->value_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.TuplePair)
  return target;
}

int Tuple_Body_TuplePair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .Tuple value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_TuplePair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_TuplePair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_TuplePair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_TuplePair::MergeFrom(const Tuple_Body_TuplePair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::Tuple::MergeFrom(from.value());
  }
}

void Tuple_Body_TuplePair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_TuplePair::CopyFrom(const Tuple_Body_TuplePair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_TuplePair::IsInitialized() const {

  return true;
}

void Tuple_Body_TuplePair::Swap(Tuple_Body_TuplePair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_TuplePair::InternalSwap(Tuple_Body_TuplePair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_TuplePair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_TuplePair_descriptor_;
  metadata.reflection = Tuple_Body_TuplePair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_NullPair::kKeyFieldNumber;
const int Tuple_Body_NullPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_NullPair::Tuple_Body_NullPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.NullPair)
}

void Tuple_Body_NullPair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_NullPair::Tuple_Body_NullPair(const Tuple_Body_NullPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.NullPair)
}

void Tuple_Body_NullPair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

Tuple_Body_NullPair::~Tuple_Body_NullPair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.NullPair)
  SharedDtor();
}

void Tuple_Body_NullPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple_Body_NullPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_NullPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_NullPair_descriptor_;
}

const Tuple_Body_NullPair& Tuple_Body_NullPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_NullPair* Tuple_Body_NullPair::default_instance_ = NULL;

Tuple_Body_NullPair* Tuple_Body_NullPair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_NullPair* n = new Tuple_Body_NullPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_NullPair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

bool Tuple_Body_NullPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.NullPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.NullPair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional .Tuple.Body.Null value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::Tuple_Body_Null >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.NullPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.NullPair)
  return false;
#undef DO_
}

void Tuple_Body_NullPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.NullPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.NullPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .Tuple.Body.Null value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.NullPair)
}

::google::protobuf::uint8* Tuple_Body_NullPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.NullPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.NullPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .Tuple.Body.Null value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.NullPair)
  return target;
}

int Tuple_Body_NullPair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .Tuple.Body.Null value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_NullPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_NullPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_NullPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_NullPair::MergeFrom(const Tuple_Body_NullPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Tuple_Body_NullPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_NullPair::CopyFrom(const Tuple_Body_NullPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_NullPair::IsInitialized() const {

  return true;
}

void Tuple_Body_NullPair::Swap(Tuple_Body_NullPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_NullPair::InternalSwap(Tuple_Body_NullPair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_NullPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_NullPair_descriptor_;
  metadata.reflection = Tuple_Body_NullPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_ArrayPair_Array_Element::kStringContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kTupleContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kIntContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kDoubleContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kBoolContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kNullContentFieldNumber;
const int Tuple_Body_ArrayPair_Array_Element::kArrayContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_ArrayPair_Array_Element::Tuple_Body_ArrayPair_Array_Element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.ArrayPair.Array.Element)
}

void Tuple_Body_ArrayPair_Array_Element::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->tuple_content_ = const_cast< ::Tuple*>(&::Tuple::default_instance());
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->int_content_ = GOOGLE_LONGLONG(0);
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->double_content_ = 0;
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->bool_content_ = false;
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->null_content_ = 0;
  Tuple_Body_ArrayPair_Array_Element_default_oneof_instance_->array_content_ = const_cast< ::Tuple_Body_ArrayPair_Array*>(&::Tuple_Body_ArrayPair_Array::default_instance());
}

Tuple_Body_ArrayPair_Array_Element::Tuple_Body_ArrayPair_Array_Element(const Tuple_Body_ArrayPair_Array_Element& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.ArrayPair.Array.Element)
}

void Tuple_Body_ArrayPair_Array_Element::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clear_has_content();
}

Tuple_Body_ArrayPair_Array_Element::~Tuple_Body_ArrayPair_Array_Element() {
  // @@protoc_insertion_point(destructor:Tuple.Body.ArrayPair.Array.Element)
  SharedDtor();
}

void Tuple_Body_ArrayPair_Array_Element::SharedDtor() {
  if (has_content()) {
    clear_content();
  }
  if (this != default_instance_) {
  }
}

void Tuple_Body_ArrayPair_Array_Element::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair_Array_Element::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_ArrayPair_Array_Element_descriptor_;
}

const Tuple_Body_ArrayPair_Array_Element& Tuple_Body_ArrayPair_Array_Element::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array_Element::default_instance_ = NULL;

Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array_Element::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_ArrayPair_Array_Element* n = new Tuple_Body_ArrayPair_Array_Element;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_ArrayPair_Array_Element::clear_content() {
  switch(content_case()) {
    case kStringContent: {
      content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTupleContent: {
      delete content_.tuple_content_;
      break;
    }
    case kIntContent: {
      // No need to clear
      break;
    }
    case kDoubleContent: {
      // No need to clear
      break;
    }
    case kBoolContent: {
      // No need to clear
      break;
    }
    case kNullContent: {
      // No need to clear
      break;
    }
    case kArrayContent: {
      delete content_.array_content_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void Tuple_Body_ArrayPair_Array_Element::Clear() {
  clear_content();
}

bool Tuple_Body_ArrayPair_Array_Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.ArrayPair.Array.Element)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string_content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_content().data(), this->string_content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.ArrayPair.Array.Element.string_content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tuple_content;
        break;
      }

      // optional .Tuple tuple_content = 2;
      case 2: {
        if (tag == 18) {
         parse_tuple_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_int_content;
        break;
      }

      // optional int64 int_content = 4;
      case 4: {
        if (tag == 32) {
         parse_int_content:
          clear_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &content_.int_content_)));
          set_has_int_content();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_double_content;
        break;
      }

      // optional double double_content = 5;
      case 5: {
        if (tag == 41) {
         parse_double_content:
          clear_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &content_.double_content_)));
          set_has_double_content();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bool_content;
        break;
      }

      // optional bool bool_content = 6;
      case 6: {
        if (tag == 48) {
         parse_bool_content:
          clear_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &content_.bool_content_)));
          set_has_bool_content();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_null_content;
        break;
      }

      // optional .Tuple.Body.Null null_content = 7;
      case 7: {
        if (tag == 56) {
         parse_null_content:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_null_content(static_cast< ::Tuple_Body_Null >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_array_content;
        break;
      }

      // optional .Tuple.Body.ArrayPair.Array array_content = 8;
      case 8: {
        if (tag == 66) {
         parse_array_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_array_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.ArrayPair.Array.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.ArrayPair.Array.Element)
  return false;
#undef DO_
}

void Tuple_Body_ArrayPair_Array_Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.ArrayPair.Array.Element)
  // optional string string_content = 1;
  if (has_string_content()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_content().data(), this->string_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.ArrayPair.Array.Element.string_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_content(), output);
  }

  // optional .Tuple tuple_content = 2;
  if (has_tuple_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *content_.tuple_content_, output);
  }

  // optional int64 int_content = 4;
  if (has_int_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->int_content(), output);
  }

  // optional double double_content = 5;
  if (has_double_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->double_content(), output);
  }

  // optional bool bool_content = 6;
  if (has_bool_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bool_content(), output);
  }

  // optional .Tuple.Body.Null null_content = 7;
  if (has_null_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->null_content(), output);
  }

  // optional .Tuple.Body.ArrayPair.Array array_content = 8;
  if (has_array_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *content_.array_content_, output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.ArrayPair.Array.Element)
}

::google::protobuf::uint8* Tuple_Body_ArrayPair_Array_Element::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.ArrayPair.Array.Element)
  // optional string string_content = 1;
  if (has_string_content()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_content().data(), this->string_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.ArrayPair.Array.Element.string_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_content(), target);
  }

  // optional .Tuple tuple_content = 2;
  if (has_tuple_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *content_.tuple_content_, target);
  }

  // optional int64 int_content = 4;
  if (has_int_content()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->int_content(), target);
  }

  // optional double double_content = 5;
  if (has_double_content()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->double_content(), target);
  }

  // optional bool bool_content = 6;
  if (has_bool_content()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bool_content(), target);
  }

  // optional .Tuple.Body.Null null_content = 7;
  if (has_null_content()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->null_content(), target);
  }

  // optional .Tuple.Body.ArrayPair.Array array_content = 8;
  if (has_array_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *content_.array_content_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.ArrayPair.Array.Element)
  return target;
}

int Tuple_Body_ArrayPair_Array_Element::ByteSize() const {
  int total_size = 0;

  switch (content_case()) {
    // optional string string_content = 1;
    case kStringContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_content());
      break;
    }
    // optional .Tuple tuple_content = 2;
    case kTupleContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.tuple_content_);
      break;
    }
    // optional int64 int_content = 4;
    case kIntContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_content());
      break;
    }
    // optional double double_content = 5;
    case kDoubleContent: {
      total_size += 1 + 8;
      break;
    }
    // optional bool bool_content = 6;
    case kBoolContent: {
      total_size += 1 + 1;
      break;
    }
    // optional .Tuple.Body.Null null_content = 7;
    case kNullContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->null_content());
      break;
    }
    // optional .Tuple.Body.ArrayPair.Array array_content = 8;
    case kArrayContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.array_content_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_ArrayPair_Array_Element::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_ArrayPair_Array_Element* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_ArrayPair_Array_Element>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_ArrayPair_Array_Element::MergeFrom(const Tuple_Body_ArrayPair_Array_Element& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.content_case()) {
    case kStringContent: {
      set_string_content(from.string_content());
      break;
    }
    case kTupleContent: {
      mutable_tuple_content()->::Tuple::MergeFrom(from.tuple_content());
      break;
    }
    case kIntContent: {
      set_int_content(from.int_content());
      break;
    }
    case kDoubleContent: {
      set_double_content(from.double_content());
      break;
    }
    case kBoolContent: {
      set_bool_content(from.bool_content());
      break;
    }
    case kNullContent: {
      set_null_content(from.null_content());
      break;
    }
    case kArrayContent: {
      mutable_array_content()->::Tuple_Body_ArrayPair_Array::MergeFrom(from.array_content());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void Tuple_Body_ArrayPair_Array_Element::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_ArrayPair_Array_Element::CopyFrom(const Tuple_Body_ArrayPair_Array_Element& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_ArrayPair_Array_Element::IsInitialized() const {

  return true;
}

void Tuple_Body_ArrayPair_Array_Element::Swap(Tuple_Body_ArrayPair_Array_Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_ArrayPair_Array_Element::InternalSwap(Tuple_Body_ArrayPair_Array_Element* other) {
  std::swap(content_, other->content_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_ArrayPair_Array_Element::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_ArrayPair_Array_Element_descriptor_;
  metadata.reflection = Tuple_Body_ArrayPair_Array_Element_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_ArrayPair_Array::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_ArrayPair_Array::Tuple_Body_ArrayPair_Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.ArrayPair.Array)
}

void Tuple_Body_ArrayPair_Array::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple_Body_ArrayPair_Array::Tuple_Body_ArrayPair_Array(const Tuple_Body_ArrayPair_Array& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.ArrayPair.Array)
}

void Tuple_Body_ArrayPair_Array::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Tuple_Body_ArrayPair_Array::~Tuple_Body_ArrayPair_Array() {
  // @@protoc_insertion_point(destructor:Tuple.Body.ArrayPair.Array)
  SharedDtor();
}

void Tuple_Body_ArrayPair_Array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Tuple_Body_ArrayPair_Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair_Array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_ArrayPair_Array_descriptor_;
}

const Tuple_Body_ArrayPair_Array& Tuple_Body_ArrayPair_Array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array::default_instance_ = NULL;

Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_ArrayPair_Array* n = new Tuple_Body_ArrayPair_Array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_ArrayPair_Array::Clear() {
  element_.Clear();
}

bool Tuple_Body_ArrayPair_Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.ArrayPair.Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_element:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_element;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.ArrayPair.Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.ArrayPair.Array)
  return false;
#undef DO_
}

void Tuple_Body_ArrayPair_Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.ArrayPair.Array)
  // repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
  for (unsigned int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->element(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.ArrayPair.Array)
}

::google::protobuf::uint8* Tuple_Body_ArrayPair_Array::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.ArrayPair.Array)
  // repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
  for (unsigned int i = 0, n = this->element_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->element(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.ArrayPair.Array)
  return target;
}

int Tuple_Body_ArrayPair_Array::ByteSize() const {
  int total_size = 0;

  // repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
  total_size += 1 * this->element_size();
  for (int i = 0; i < this->element_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->element(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_ArrayPair_Array::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_ArrayPair_Array* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_ArrayPair_Array>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_ArrayPair_Array::MergeFrom(const Tuple_Body_ArrayPair_Array& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  element_.MergeFrom(from.element_);
}

void Tuple_Body_ArrayPair_Array::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_ArrayPair_Array::CopyFrom(const Tuple_Body_ArrayPair_Array& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_ArrayPair_Array::IsInitialized() const {

  return true;
}

void Tuple_Body_ArrayPair_Array::Swap(Tuple_Body_ArrayPair_Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_ArrayPair_Array::InternalSwap(Tuple_Body_ArrayPair_Array* other) {
  element_.UnsafeArenaSwap(&other->element_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_ArrayPair_Array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_ArrayPair_Array_descriptor_;
  metadata.reflection = Tuple_Body_ArrayPair_Array_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body_ArrayPair::kKeyFieldNumber;
const int Tuple_Body_ArrayPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body_ArrayPair::Tuple_Body_ArrayPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body.ArrayPair)
}

void Tuple_Body_ArrayPair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  value_ = const_cast< ::Tuple_Body_ArrayPair_Array*>(&::Tuple_Body_ArrayPair_Array::default_instance());
}

Tuple_Body_ArrayPair::Tuple_Body_ArrayPair(const Tuple_Body_ArrayPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body.ArrayPair)
}

void Tuple_Body_ArrayPair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

Tuple_Body_ArrayPair::~Tuple_Body_ArrayPair() {
  // @@protoc_insertion_point(destructor:Tuple.Body.ArrayPair)
  SharedDtor();
}

void Tuple_Body_ArrayPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
  }
}

void Tuple_Body_ArrayPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body_ArrayPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_ArrayPair_descriptor_;
}

const Tuple_Body_ArrayPair& Tuple_Body_ArrayPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body_ArrayPair* Tuple_Body_ArrayPair::default_instance_ = NULL;

Tuple_Body_ArrayPair* Tuple_Body_ArrayPair::New(::google::protobuf::Arena* arena) const {
  Tuple_Body_ArrayPair* n = new Tuple_Body_ArrayPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body_ArrayPair::Clear() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}

bool Tuple_Body_ArrayPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body.ArrayPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.ArrayPair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .Tuple.Body.ArrayPair.Array value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body.ArrayPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body.ArrayPair)
  return false;
#undef DO_
}

void Tuple_Body_ArrayPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body.ArrayPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.ArrayPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .Tuple.Body.ArrayPair.Array value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body.ArrayPair)
}

::google::protobuf::uint8* Tuple_Body_ArrayPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body.ArrayPair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.ArrayPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .Tuple.Body.ArrayPair.Array value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->value_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body.ArrayPair)
  return target;
}

int Tuple_Body_ArrayPair::ByteSize() const {
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .Tuple.Body.ArrayPair.Array value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body_ArrayPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body_ArrayPair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body_ArrayPair>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body_ArrayPair::MergeFrom(const Tuple_Body_ArrayPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::Tuple_Body_ArrayPair_Array::MergeFrom(from.value());
  }
}

void Tuple_Body_ArrayPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body_ArrayPair::CopyFrom(const Tuple_Body_ArrayPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body_ArrayPair::IsInitialized() const {

  return true;
}

void Tuple_Body_ArrayPair::Swap(Tuple_Body_ArrayPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body_ArrayPair::InternalSwap(Tuple_Body_ArrayPair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body_ArrayPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_ArrayPair_descriptor_;
  metadata.reflection = Tuple_Body_ArrayPair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple_Body::kStringContentFieldNumber;
const int Tuple_Body::kTupleContentFieldNumber;
const int Tuple_Body::kStringPairContentFieldNumber;
const int Tuple_Body::kIntPairContentFieldNumber;
const int Tuple_Body::kDoublePairContentFieldNumber;
const int Tuple_Body::kBoolPairContentFieldNumber;
const int Tuple_Body::kTuplePairContentFieldNumber;
const int Tuple_Body::kNullPairContentFieldNumber;
const int Tuple_Body::kArrayPairContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple_Body::Tuple_Body()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple.Body)
}

void Tuple_Body::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Tuple_Body_default_oneof_instance_->string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  Tuple_Body_default_oneof_instance_->tuple_content_ = const_cast< ::Tuple*>(&::Tuple::default_instance());
  Tuple_Body_default_oneof_instance_->string_pair_content_ = const_cast< ::Tuple_Body_StringPair*>(&::Tuple_Body_StringPair::default_instance());
  Tuple_Body_default_oneof_instance_->int_pair_content_ = const_cast< ::Tuple_Body_IntPair*>(&::Tuple_Body_IntPair::default_instance());
  Tuple_Body_default_oneof_instance_->double_pair_content_ = const_cast< ::Tuple_Body_DoublePair*>(&::Tuple_Body_DoublePair::default_instance());
  Tuple_Body_default_oneof_instance_->bool_pair_content_ = const_cast< ::Tuple_Body_BoolPair*>(&::Tuple_Body_BoolPair::default_instance());
  Tuple_Body_default_oneof_instance_->tuple_pair_content_ = const_cast< ::Tuple_Body_TuplePair*>(&::Tuple_Body_TuplePair::default_instance());
  Tuple_Body_default_oneof_instance_->null_pair_content_ = const_cast< ::Tuple_Body_NullPair*>(&::Tuple_Body_NullPair::default_instance());
  Tuple_Body_default_oneof_instance_->array_pair_content_ = const_cast< ::Tuple_Body_ArrayPair*>(&::Tuple_Body_ArrayPair::default_instance());
}

Tuple_Body::Tuple_Body(const Tuple_Body& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple.Body)
}

void Tuple_Body::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clear_has_content();
}

Tuple_Body::~Tuple_Body() {
  // @@protoc_insertion_point(destructor:Tuple.Body)
  SharedDtor();
}

void Tuple_Body::SharedDtor() {
  if (has_content()) {
    clear_content();
  }
  if (this != default_instance_) {
  }
}

void Tuple_Body::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple_Body::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_Body_descriptor_;
}

const Tuple_Body& Tuple_Body::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple_Body* Tuple_Body::default_instance_ = NULL;

Tuple_Body* Tuple_Body::New(::google::protobuf::Arena* arena) const {
  Tuple_Body* n = new Tuple_Body;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple_Body::clear_content() {
  switch(content_case()) {
    case kStringContent: {
      content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTupleContent: {
      delete content_.tuple_content_;
      break;
    }
    case kStringPairContent: {
      delete content_.string_pair_content_;
      break;
    }
    case kIntPairContent: {
      delete content_.int_pair_content_;
      break;
    }
    case kDoublePairContent: {
      delete content_.double_pair_content_;
      break;
    }
    case kBoolPairContent: {
      delete content_.bool_pair_content_;
      break;
    }
    case kTuplePairContent: {
      delete content_.tuple_pair_content_;
      break;
    }
    case kNullPairContent: {
      delete content_.null_pair_content_;
      break;
    }
    case kArrayPairContent: {
      delete content_.array_pair_content_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void Tuple_Body::Clear() {
  clear_content();
}

bool Tuple_Body::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple.Body)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string_content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_content().data(), this->string_content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.Body.string_content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tuple_content;
        break;
      }

      // optional .Tuple tuple_content = 2;
      case 2: {
        if (tag == 18) {
         parse_tuple_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_string_pair_content;
        break;
      }

      // optional .Tuple.Body.StringPair string_pair_content = 3;
      case 3: {
        if (tag == 26) {
         parse_string_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_string_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_int_pair_content;
        break;
      }

      // optional .Tuple.Body.IntPair int_pair_content = 4;
      case 4: {
        if (tag == 34) {
         parse_int_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_double_pair_content;
        break;
      }

      // optional .Tuple.Body.DoublePair double_pair_content = 5;
      case 5: {
        if (tag == 42) {
         parse_double_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_double_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_bool_pair_content;
        break;
      }

      // optional .Tuple.Body.BoolPair bool_pair_content = 6;
      case 6: {
        if (tag == 50) {
         parse_bool_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bool_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tuple_pair_content;
        break;
      }

      // optional .Tuple.Body.TuplePair tuple_pair_content = 7;
      case 7: {
        if (tag == 58) {
         parse_tuple_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_null_pair_content;
        break;
      }

      // optional .Tuple.Body.NullPair null_pair_content = 8;
      case 8: {
        if (tag == 66) {
         parse_null_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_null_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_array_pair_content;
        break;
      }

      // optional .Tuple.Body.ArrayPair array_pair_content = 9;
      case 9: {
        if (tag == 74) {
         parse_array_pair_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_array_pair_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple.Body)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple.Body)
  return false;
#undef DO_
}

void Tuple_Body::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple.Body)
  // optional string string_content = 1;
  if (has_string_content()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_content().data(), this->string_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.string_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_content(), output);
  }

  // optional .Tuple tuple_content = 2;
  if (has_tuple_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *content_.tuple_content_, output);
  }

  // optional .Tuple.Body.StringPair string_pair_content = 3;
  if (has_string_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *content_.string_pair_content_, output);
  }

  // optional .Tuple.Body.IntPair int_pair_content = 4;
  if (has_int_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *content_.int_pair_content_, output);
  }

  // optional .Tuple.Body.DoublePair double_pair_content = 5;
  if (has_double_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *content_.double_pair_content_, output);
  }

  // optional .Tuple.Body.BoolPair bool_pair_content = 6;
  if (has_bool_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *content_.bool_pair_content_, output);
  }

  // optional .Tuple.Body.TuplePair tuple_pair_content = 7;
  if (has_tuple_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *content_.tuple_pair_content_, output);
  }

  // optional .Tuple.Body.NullPair null_pair_content = 8;
  if (has_null_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *content_.null_pair_content_, output);
  }

  // optional .Tuple.Body.ArrayPair array_pair_content = 9;
  if (has_array_pair_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *content_.array_pair_content_, output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple.Body)
}

::google::protobuf::uint8* Tuple_Body::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple.Body)
  // optional string string_content = 1;
  if (has_string_content()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_content().data(), this->string_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.Body.string_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_content(), target);
  }

  // optional .Tuple tuple_content = 2;
  if (has_tuple_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *content_.tuple_content_, target);
  }

  // optional .Tuple.Body.StringPair string_pair_content = 3;
  if (has_string_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *content_.string_pair_content_, target);
  }

  // optional .Tuple.Body.IntPair int_pair_content = 4;
  if (has_int_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *content_.int_pair_content_, target);
  }

  // optional .Tuple.Body.DoublePair double_pair_content = 5;
  if (has_double_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *content_.double_pair_content_, target);
  }

  // optional .Tuple.Body.BoolPair bool_pair_content = 6;
  if (has_bool_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *content_.bool_pair_content_, target);
  }

  // optional .Tuple.Body.TuplePair tuple_pair_content = 7;
  if (has_tuple_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *content_.tuple_pair_content_, target);
  }

  // optional .Tuple.Body.NullPair null_pair_content = 8;
  if (has_null_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *content_.null_pair_content_, target);
  }

  // optional .Tuple.Body.ArrayPair array_pair_content = 9;
  if (has_array_pair_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, *content_.array_pair_content_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple.Body)
  return target;
}

int Tuple_Body::ByteSize() const {
  int total_size = 0;

  switch (content_case()) {
    // optional string string_content = 1;
    case kStringContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_content());
      break;
    }
    // optional .Tuple tuple_content = 2;
    case kTupleContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.tuple_content_);
      break;
    }
    // optional .Tuple.Body.StringPair string_pair_content = 3;
    case kStringPairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.string_pair_content_);
      break;
    }
    // optional .Tuple.Body.IntPair int_pair_content = 4;
    case kIntPairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.int_pair_content_);
      break;
    }
    // optional .Tuple.Body.DoublePair double_pair_content = 5;
    case kDoublePairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.double_pair_content_);
      break;
    }
    // optional .Tuple.Body.BoolPair bool_pair_content = 6;
    case kBoolPairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.bool_pair_content_);
      break;
    }
    // optional .Tuple.Body.TuplePair tuple_pair_content = 7;
    case kTuplePairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.tuple_pair_content_);
      break;
    }
    // optional .Tuple.Body.NullPair null_pair_content = 8;
    case kNullPairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.null_pair_content_);
      break;
    }
    // optional .Tuple.Body.ArrayPair array_pair_content = 9;
    case kArrayPairContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.array_pair_content_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple_Body::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple_Body* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple_Body>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple_Body::MergeFrom(const Tuple_Body& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.content_case()) {
    case kStringContent: {
      set_string_content(from.string_content());
      break;
    }
    case kTupleContent: {
      mutable_tuple_content()->::Tuple::MergeFrom(from.tuple_content());
      break;
    }
    case kStringPairContent: {
      mutable_string_pair_content()->::Tuple_Body_StringPair::MergeFrom(from.string_pair_content());
      break;
    }
    case kIntPairContent: {
      mutable_int_pair_content()->::Tuple_Body_IntPair::MergeFrom(from.int_pair_content());
      break;
    }
    case kDoublePairContent: {
      mutable_double_pair_content()->::Tuple_Body_DoublePair::MergeFrom(from.double_pair_content());
      break;
    }
    case kBoolPairContent: {
      mutable_bool_pair_content()->::Tuple_Body_BoolPair::MergeFrom(from.bool_pair_content());
      break;
    }
    case kTuplePairContent: {
      mutable_tuple_pair_content()->::Tuple_Body_TuplePair::MergeFrom(from.tuple_pair_content());
      break;
    }
    case kNullPairContent: {
      mutable_null_pair_content()->::Tuple_Body_NullPair::MergeFrom(from.null_pair_content());
      break;
    }
    case kArrayPairContent: {
      mutable_array_pair_content()->::Tuple_Body_ArrayPair::MergeFrom(from.array_pair_content());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void Tuple_Body::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple_Body::CopyFrom(const Tuple_Body& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple_Body::IsInitialized() const {

  return true;
}

void Tuple_Body::Swap(Tuple_Body* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple_Body::InternalSwap(Tuple_Body* other) {
  std::swap(content_, other->content_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple_Body::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_Body_descriptor_;
  metadata.reflection = Tuple_Body_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple::kTagFieldNumber;
const int Tuple::kAttrFieldNumber;
const int Tuple::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple::Tuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tuple)
}

void Tuple::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Tuple::Tuple(const Tuple& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Tuple)
}

void Tuple::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  attr_.SetEntryDescriptor(
      &::Tuple_AttrEntry_descriptor_);
}

Tuple::~Tuple() {
  // @@protoc_insertion_point(destructor:Tuple)
  SharedDtor();
}

void Tuple::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tuple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_descriptor_;
}

const Tuple& Tuple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pirf_2eproto();
  return *default_instance_;
}

Tuple* Tuple::default_instance_ = NULL;

Tuple* Tuple::New(::google::protobuf::Arena* arena) const {
  Tuple* n = new Tuple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tuple::Clear() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_.Clear();
  body_.Clear();
}

bool Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tuple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // map<string, string> attr = 2;
      case 2: {
        if (tag == 18) {
         parse_attr:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attr:
          ::google::protobuf::scoped_ptr<Tuple_AttrEntry> entry(attr_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_attr())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.AttrEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->mutable_value()->data(),
            entry->mutable_value()->length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Tuple.AttrEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_attr;
        if (input->ExpectTag(26)) goto parse_loop_body;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Tuple.Body body = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_body;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tuple)
  return false;
#undef DO_
}

void Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tuple)
  // optional string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag(), output);
  }

  // map<string, string> attr = 2;
  {
    ::google::protobuf::scoped_ptr<Tuple_AttrEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->attr().begin();
        it != this->attr().end(); ++it) {
      entry.reset(attr_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          2, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Tuple.AttrEntry.key");
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Tuple.AttrEntry.value");
    }
  }

  // repeated .Tuple.Body body = 3;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->body(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Tuple)
}

::google::protobuf::uint8* Tuple::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tuple)
  // optional string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Tuple.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag(), target);
  }

  // map<string, string> attr = 2;
  {
    ::google::protobuf::scoped_ptr<Tuple_AttrEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->attr().begin();
        it != this->attr().end(); ++it) {
      entry.reset(attr_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              2, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Tuple.AttrEntry.key");
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Tuple.AttrEntry.value");
    }
  }

  // repeated .Tuple.Body body = 3;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->body(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Tuple)
  return target;
}

int Tuple::ByteSize() const {
  int total_size = 0;

  // optional string tag = 1;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // map<string, string> attr = 2;
  total_size += 1 * this->attr_size();
  {
    ::google::protobuf::scoped_ptr<Tuple_AttrEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->attr().begin();
        it != this->attr().end(); ++it) {
      entry.reset(attr_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .Tuple.Body body = 3;
  total_size += 1 * this->body_size();
  for (int i = 0; i < this->body_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->body(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tuple* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple::MergeFrom(const Tuple& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  attr_.MergeFrom(from.attr_);
  body_.MergeFrom(from.body_);
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
}

void Tuple::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple::CopyFrom(const Tuple& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple::IsInitialized() const {

  return true;
}

void Tuple::Swap(Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple::InternalSwap(Tuple* other) {
  tag_.Swap(&other->tag_);
  attr_.Swap(&other->attr_);
  body_.UnsafeArenaSwap(&other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tuple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_descriptor_;
  metadata.reflection = Tuple_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tuple_Body_StringPair

// optional string key = 1;
void Tuple_Body_StringPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_StringPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.StringPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_StringPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.StringPair.key)
}
 void Tuple_Body_StringPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.StringPair.key)
}
 void Tuple_Body_StringPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.StringPair.key)
}
 ::std::string* Tuple_Body_StringPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.StringPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_StringPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_StringPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.StringPair.key)
}

// optional string value = 2;
void Tuple_Body_StringPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_StringPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.StringPair.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_StringPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.StringPair.value)
}
 void Tuple_Body_StringPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.StringPair.value)
}
 void Tuple_Body_StringPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.StringPair.value)
}
 ::std::string* Tuple_Body_StringPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.StringPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_StringPair::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_StringPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.StringPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_IntPair

// optional string key = 1;
void Tuple_Body_IntPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_IntPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.IntPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_IntPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.IntPair.key)
}
 void Tuple_Body_IntPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.IntPair.key)
}
 void Tuple_Body_IntPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.IntPair.key)
}
 ::std::string* Tuple_Body_IntPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.IntPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_IntPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_IntPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.IntPair.key)
}

// optional int64 value = 2;
void Tuple_Body_IntPair::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Tuple_Body_IntPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.IntPair.value)
  return value_;
}
 void Tuple_Body_IntPair::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.IntPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_DoublePair

// optional string key = 1;
void Tuple_Body_DoublePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_DoublePair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.DoublePair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_DoublePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.DoublePair.key)
}
 void Tuple_Body_DoublePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.DoublePair.key)
}
 void Tuple_Body_DoublePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.DoublePair.key)
}
 ::std::string* Tuple_Body_DoublePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.DoublePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_DoublePair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_DoublePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.DoublePair.key)
}

// optional double value = 2;
void Tuple_Body_DoublePair::clear_value() {
  value_ = 0;
}
 double Tuple_Body_DoublePair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.DoublePair.value)
  return value_;
}
 void Tuple_Body_DoublePair::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.DoublePair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_BoolPair

// optional string key = 1;
void Tuple_Body_BoolPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_BoolPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.BoolPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_BoolPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.BoolPair.key)
}
 void Tuple_Body_BoolPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.BoolPair.key)
}
 void Tuple_Body_BoolPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.BoolPair.key)
}
 ::std::string* Tuple_Body_BoolPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.BoolPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_BoolPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_BoolPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.BoolPair.key)
}

// optional bool value = 2;
void Tuple_Body_BoolPair::clear_value() {
  value_ = false;
}
 bool Tuple_Body_BoolPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.BoolPair.value)
  return value_;
}
 void Tuple_Body_BoolPair::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.BoolPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_TuplePair

// optional string key = 1;
void Tuple_Body_TuplePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_TuplePair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.TuplePair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_TuplePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.TuplePair.key)
}
 void Tuple_Body_TuplePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.TuplePair.key)
}
 void Tuple_Body_TuplePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.TuplePair.key)
}
 ::std::string* Tuple_Body_TuplePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.TuplePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_TuplePair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_TuplePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.TuplePair.key)
}

// optional .Tuple value = 2;
bool Tuple_Body_TuplePair::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
void Tuple_Body_TuplePair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::Tuple& Tuple_Body_TuplePair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.TuplePair.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::Tuple* Tuple_Body_TuplePair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.TuplePair.value)
  return value_;
}
::Tuple* Tuple_Body_TuplePair::release_value() {
  
  ::Tuple* temp = value_;
  value_ = NULL;
  return temp;
}
void Tuple_Body_TuplePair::set_allocated_value(::Tuple* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.TuplePair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_NullPair

// optional string key = 1;
void Tuple_Body_NullPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_NullPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.NullPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_NullPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.NullPair.key)
}
 void Tuple_Body_NullPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.NullPair.key)
}
 void Tuple_Body_NullPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.NullPair.key)
}
 ::std::string* Tuple_Body_NullPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.NullPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_NullPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_NullPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.NullPair.key)
}

// optional .Tuple.Body.Null value = 2;
void Tuple_Body_NullPair::clear_value() {
  value_ = 0;
}
 ::Tuple_Body_Null Tuple_Body_NullPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.NullPair.value)
  return static_cast< ::Tuple_Body_Null >(value_);
}
 void Tuple_Body_NullPair::set_value(::Tuple_Body_Null value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.NullPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body_ArrayPair_Array_Element

// optional string string_content = 1;
bool Tuple_Body_ArrayPair_Array_Element::has_string_content() const {
  return content_case() == kStringContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_string_content() {
  _oneof_case_[0] = kStringContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_string_content() {
  if (has_string_content()) {
    content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
 const ::std::string& Tuple_Body_ArrayPair_Array_Element::string_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.string_content)
  if (has_string_content()) {
    return content_.string_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void Tuple_Body_ArrayPair_Array_Element::set_string_content(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.string_content)
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.string_content)
}
 void Tuple_Body_ArrayPair_Array_Element::set_string_content(const char* value) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.ArrayPair.Array.Element.string_content)
}
 void Tuple_Body_ArrayPair_Array_Element::set_string_content(const char* value, size_t size) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.ArrayPair.Array.Element.string_content)
}
 ::std::string* Tuple_Body_ArrayPair_Array_Element::mutable_string_content() {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.string_content)
  return content_.string_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_ArrayPair_Array_Element::release_string_content() {
  if (has_string_content()) {
    clear_has_content();
    return content_.string_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void Tuple_Body_ArrayPair_Array_Element::set_allocated_string_content(::std::string* string_content) {
  if (!has_string_content()) {
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (string_content != NULL) {
    set_has_string_content();
    content_.string_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_content);
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.string_content)
}

// optional .Tuple tuple_content = 2;
bool Tuple_Body_ArrayPair_Array_Element::has_tuple_content() const {
  return content_case() == kTupleContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_tuple_content() {
  _oneof_case_[0] = kTupleContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_tuple_content() {
  if (has_tuple_content()) {
    delete content_.tuple_content_;
    clear_has_content();
  }
}
 const ::Tuple& Tuple_Body_ArrayPair_Array_Element::tuple_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.tuple_content)
  return has_tuple_content()
      ? *content_.tuple_content_
      : ::Tuple::default_instance();
}
::Tuple* Tuple_Body_ArrayPair_Array_Element::mutable_tuple_content() {
  if (!has_tuple_content()) {
    clear_content();
    set_has_tuple_content();
    content_.tuple_content_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.tuple_content)
  return content_.tuple_content_;
}
::Tuple* Tuple_Body_ArrayPair_Array_Element::release_tuple_content() {
  if (has_tuple_content()) {
    clear_has_content();
    ::Tuple* temp = content_.tuple_content_;
    content_.tuple_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body_ArrayPair_Array_Element::set_allocated_tuple_content(::Tuple* tuple_content) {
  clear_content();
  if (tuple_content) {
    set_has_tuple_content();
    content_.tuple_content_ = tuple_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.tuple_content)
}

// optional int64 int_content = 4;
bool Tuple_Body_ArrayPair_Array_Element::has_int_content() const {
  return content_case() == kIntContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_int_content() {
  _oneof_case_[0] = kIntContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_int_content() {
  if (has_int_content()) {
    content_.int_content_ = GOOGLE_LONGLONG(0);
    clear_has_content();
  }
}
 ::google::protobuf::int64 Tuple_Body_ArrayPair_Array_Element::int_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.int_content)
  if (has_int_content()) {
    return content_.int_content_;
  }
  return GOOGLE_LONGLONG(0);
}
 void Tuple_Body_ArrayPair_Array_Element::set_int_content(::google::protobuf::int64 value) {
  if (!has_int_content()) {
    clear_content();
    set_has_int_content();
  }
  content_.int_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.int_content)
}

// optional double double_content = 5;
bool Tuple_Body_ArrayPair_Array_Element::has_double_content() const {
  return content_case() == kDoubleContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_double_content() {
  _oneof_case_[0] = kDoubleContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_double_content() {
  if (has_double_content()) {
    content_.double_content_ = 0;
    clear_has_content();
  }
}
 double Tuple_Body_ArrayPair_Array_Element::double_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.double_content)
  if (has_double_content()) {
    return content_.double_content_;
  }
  return 0;
}
 void Tuple_Body_ArrayPair_Array_Element::set_double_content(double value) {
  if (!has_double_content()) {
    clear_content();
    set_has_double_content();
  }
  content_.double_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.double_content)
}

// optional bool bool_content = 6;
bool Tuple_Body_ArrayPair_Array_Element::has_bool_content() const {
  return content_case() == kBoolContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_bool_content() {
  _oneof_case_[0] = kBoolContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_bool_content() {
  if (has_bool_content()) {
    content_.bool_content_ = false;
    clear_has_content();
  }
}
 bool Tuple_Body_ArrayPair_Array_Element::bool_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.bool_content)
  if (has_bool_content()) {
    return content_.bool_content_;
  }
  return false;
}
 void Tuple_Body_ArrayPair_Array_Element::set_bool_content(bool value) {
  if (!has_bool_content()) {
    clear_content();
    set_has_bool_content();
  }
  content_.bool_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.bool_content)
}

// optional .Tuple.Body.Null null_content = 7;
bool Tuple_Body_ArrayPair_Array_Element::has_null_content() const {
  return content_case() == kNullContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_null_content() {
  _oneof_case_[0] = kNullContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_null_content() {
  if (has_null_content()) {
    content_.null_content_ = 0;
    clear_has_content();
  }
}
 ::Tuple_Body_Null Tuple_Body_ArrayPair_Array_Element::null_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.null_content)
  if (has_null_content()) {
    return static_cast< ::Tuple_Body_Null >(content_.null_content_);
  }
  return static_cast< ::Tuple_Body_Null >(0);
}
 void Tuple_Body_ArrayPair_Array_Element::set_null_content(::Tuple_Body_Null value) {
  if (!has_null_content()) {
    clear_content();
    set_has_null_content();
  }
  content_.null_content_ = value;
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.Array.Element.null_content)
}

// optional .Tuple.Body.ArrayPair.Array array_content = 8;
bool Tuple_Body_ArrayPair_Array_Element::has_array_content() const {
  return content_case() == kArrayContent;
}
void Tuple_Body_ArrayPair_Array_Element::set_has_array_content() {
  _oneof_case_[0] = kArrayContent;
}
void Tuple_Body_ArrayPair_Array_Element::clear_array_content() {
  if (has_array_content()) {
    delete content_.array_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_ArrayPair_Array& Tuple_Body_ArrayPair_Array_Element::array_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.Element.array_content)
  return has_array_content()
      ? *content_.array_content_
      : ::Tuple_Body_ArrayPair_Array::default_instance();
}
::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array_Element::mutable_array_content() {
  if (!has_array_content()) {
    clear_content();
    set_has_array_content();
    content_.array_content_ = new ::Tuple_Body_ArrayPair_Array;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.Element.array_content)
  return content_.array_content_;
}
::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair_Array_Element::release_array_content() {
  if (has_array_content()) {
    clear_has_content();
    ::Tuple_Body_ArrayPair_Array* temp = content_.array_content_;
    content_.array_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body_ArrayPair_Array_Element::set_allocated_array_content(::Tuple_Body_ArrayPair_Array* array_content) {
  clear_content();
  if (array_content) {
    set_has_array_content();
    content_.array_content_ = array_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.Array.Element.array_content)
}

bool Tuple_Body_ArrayPair_Array_Element::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
void Tuple_Body_ArrayPair_Array_Element::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
Tuple_Body_ArrayPair_Array_Element::ContentCase Tuple_Body_ArrayPair_Array_Element::content_case() const {
  return Tuple_Body_ArrayPair_Array_Element::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Tuple_Body_ArrayPair_Array

// repeated .Tuple.Body.ArrayPair.Array.Element element = 1;
int Tuple_Body_ArrayPair_Array::element_size() const {
  return element_.size();
}
void Tuple_Body_ArrayPair_Array::clear_element() {
  element_.Clear();
}
const ::Tuple_Body_ArrayPair_Array_Element& Tuple_Body_ArrayPair_Array::element(int index) const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.Array.element)
  return element_.Get(index);
}
::Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.Array.element)
  return element_.Mutable(index);
}
::Tuple_Body_ArrayPair_Array_Element* Tuple_Body_ArrayPair_Array::add_element() {
  // @@protoc_insertion_point(field_add:Tuple.Body.ArrayPair.Array.element)
  return element_.Add();
}
::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >*
Tuple_Body_ArrayPair_Array::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:Tuple.Body.ArrayPair.Array.element)
  return &element_;
}
const ::google::protobuf::RepeatedPtrField< ::Tuple_Body_ArrayPair_Array_Element >&
Tuple_Body_ArrayPair_Array::element() const {
  // @@protoc_insertion_point(field_list:Tuple.Body.ArrayPair.Array.element)
  return element_;
}

// -------------------------------------------------------------------

// Tuple_Body_ArrayPair

// optional string key = 1;
void Tuple_Body_ArrayPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple_Body_ArrayPair::key() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_ArrayPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.ArrayPair.key)
}
 void Tuple_Body_ArrayPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.ArrayPair.key)
}
 void Tuple_Body_ArrayPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.ArrayPair.key)
}
 ::std::string* Tuple_Body_ArrayPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body_ArrayPair::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple_Body_ArrayPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.key)
}

// optional .Tuple.Body.ArrayPair.Array value = 2;
bool Tuple_Body_ArrayPair::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
void Tuple_Body_ArrayPair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::Tuple_Body_ArrayPair_Array& Tuple_Body_ArrayPair::value() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.ArrayPair.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::Tuple_Body_ArrayPair_Array;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.ArrayPair.value)
  return value_;
}
::Tuple_Body_ArrayPair_Array* Tuple_Body_ArrayPair::release_value() {
  
  ::Tuple_Body_ArrayPair_Array* temp = value_;
  value_ = NULL;
  return temp;
}
void Tuple_Body_ArrayPair::set_allocated_value(::Tuple_Body_ArrayPair_Array* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.ArrayPair.value)
}

// -------------------------------------------------------------------

// Tuple_Body

// optional string string_content = 1;
bool Tuple_Body::has_string_content() const {
  return content_case() == kStringContent;
}
void Tuple_Body::set_has_string_content() {
  _oneof_case_[0] = kStringContent;
}
void Tuple_Body::clear_string_content() {
  if (has_string_content()) {
    content_.string_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
 const ::std::string& Tuple_Body::string_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.string_content)
  if (has_string_content()) {
    return content_.string_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void Tuple_Body::set_string_content(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Tuple.Body.string_content)
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.Body.string_content)
}
 void Tuple_Body::set_string_content(const char* value) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.Body.string_content)
}
 void Tuple_Body::set_string_content(const char* value, size_t size) {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.string_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.Body.string_content)
}
 ::std::string* Tuple_Body::mutable_string_content() {
  if (!has_string_content()) {
    clear_content();
    set_has_string_content();
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.string_content)
  return content_.string_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple_Body::release_string_content() {
  if (has_string_content()) {
    clear_has_content();
    return content_.string_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void Tuple_Body::set_allocated_string_content(::std::string* string_content) {
  if (!has_string_content()) {
    content_.string_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (string_content != NULL) {
    set_has_string_content();
    content_.string_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_content);
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.string_content)
}

// optional .Tuple tuple_content = 2;
bool Tuple_Body::has_tuple_content() const {
  return content_case() == kTupleContent;
}
void Tuple_Body::set_has_tuple_content() {
  _oneof_case_[0] = kTupleContent;
}
void Tuple_Body::clear_tuple_content() {
  if (has_tuple_content()) {
    delete content_.tuple_content_;
    clear_has_content();
  }
}
 const ::Tuple& Tuple_Body::tuple_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.tuple_content)
  return has_tuple_content()
      ? *content_.tuple_content_
      : ::Tuple::default_instance();
}
::Tuple* Tuple_Body::mutable_tuple_content() {
  if (!has_tuple_content()) {
    clear_content();
    set_has_tuple_content();
    content_.tuple_content_ = new ::Tuple;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.tuple_content)
  return content_.tuple_content_;
}
::Tuple* Tuple_Body::release_tuple_content() {
  if (has_tuple_content()) {
    clear_has_content();
    ::Tuple* temp = content_.tuple_content_;
    content_.tuple_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_tuple_content(::Tuple* tuple_content) {
  clear_content();
  if (tuple_content) {
    set_has_tuple_content();
    content_.tuple_content_ = tuple_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.tuple_content)
}

// optional .Tuple.Body.StringPair string_pair_content = 3;
bool Tuple_Body::has_string_pair_content() const {
  return content_case() == kStringPairContent;
}
void Tuple_Body::set_has_string_pair_content() {
  _oneof_case_[0] = kStringPairContent;
}
void Tuple_Body::clear_string_pair_content() {
  if (has_string_pair_content()) {
    delete content_.string_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_StringPair& Tuple_Body::string_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.string_pair_content)
  return has_string_pair_content()
      ? *content_.string_pair_content_
      : ::Tuple_Body_StringPair::default_instance();
}
::Tuple_Body_StringPair* Tuple_Body::mutable_string_pair_content() {
  if (!has_string_pair_content()) {
    clear_content();
    set_has_string_pair_content();
    content_.string_pair_content_ = new ::Tuple_Body_StringPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.string_pair_content)
  return content_.string_pair_content_;
}
::Tuple_Body_StringPair* Tuple_Body::release_string_pair_content() {
  if (has_string_pair_content()) {
    clear_has_content();
    ::Tuple_Body_StringPair* temp = content_.string_pair_content_;
    content_.string_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_string_pair_content(::Tuple_Body_StringPair* string_pair_content) {
  clear_content();
  if (string_pair_content) {
    set_has_string_pair_content();
    content_.string_pair_content_ = string_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.string_pair_content)
}

// optional .Tuple.Body.IntPair int_pair_content = 4;
bool Tuple_Body::has_int_pair_content() const {
  return content_case() == kIntPairContent;
}
void Tuple_Body::set_has_int_pair_content() {
  _oneof_case_[0] = kIntPairContent;
}
void Tuple_Body::clear_int_pair_content() {
  if (has_int_pair_content()) {
    delete content_.int_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_IntPair& Tuple_Body::int_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.int_pair_content)
  return has_int_pair_content()
      ? *content_.int_pair_content_
      : ::Tuple_Body_IntPair::default_instance();
}
::Tuple_Body_IntPair* Tuple_Body::mutable_int_pair_content() {
  if (!has_int_pair_content()) {
    clear_content();
    set_has_int_pair_content();
    content_.int_pair_content_ = new ::Tuple_Body_IntPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.int_pair_content)
  return content_.int_pair_content_;
}
::Tuple_Body_IntPair* Tuple_Body::release_int_pair_content() {
  if (has_int_pair_content()) {
    clear_has_content();
    ::Tuple_Body_IntPair* temp = content_.int_pair_content_;
    content_.int_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_int_pair_content(::Tuple_Body_IntPair* int_pair_content) {
  clear_content();
  if (int_pair_content) {
    set_has_int_pair_content();
    content_.int_pair_content_ = int_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.int_pair_content)
}

// optional .Tuple.Body.DoublePair double_pair_content = 5;
bool Tuple_Body::has_double_pair_content() const {
  return content_case() == kDoublePairContent;
}
void Tuple_Body::set_has_double_pair_content() {
  _oneof_case_[0] = kDoublePairContent;
}
void Tuple_Body::clear_double_pair_content() {
  if (has_double_pair_content()) {
    delete content_.double_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_DoublePair& Tuple_Body::double_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.double_pair_content)
  return has_double_pair_content()
      ? *content_.double_pair_content_
      : ::Tuple_Body_DoublePair::default_instance();
}
::Tuple_Body_DoublePair* Tuple_Body::mutable_double_pair_content() {
  if (!has_double_pair_content()) {
    clear_content();
    set_has_double_pair_content();
    content_.double_pair_content_ = new ::Tuple_Body_DoublePair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.double_pair_content)
  return content_.double_pair_content_;
}
::Tuple_Body_DoublePair* Tuple_Body::release_double_pair_content() {
  if (has_double_pair_content()) {
    clear_has_content();
    ::Tuple_Body_DoublePair* temp = content_.double_pair_content_;
    content_.double_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_double_pair_content(::Tuple_Body_DoublePair* double_pair_content) {
  clear_content();
  if (double_pair_content) {
    set_has_double_pair_content();
    content_.double_pair_content_ = double_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.double_pair_content)
}

// optional .Tuple.Body.BoolPair bool_pair_content = 6;
bool Tuple_Body::has_bool_pair_content() const {
  return content_case() == kBoolPairContent;
}
void Tuple_Body::set_has_bool_pair_content() {
  _oneof_case_[0] = kBoolPairContent;
}
void Tuple_Body::clear_bool_pair_content() {
  if (has_bool_pair_content()) {
    delete content_.bool_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_BoolPair& Tuple_Body::bool_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.bool_pair_content)
  return has_bool_pair_content()
      ? *content_.bool_pair_content_
      : ::Tuple_Body_BoolPair::default_instance();
}
::Tuple_Body_BoolPair* Tuple_Body::mutable_bool_pair_content() {
  if (!has_bool_pair_content()) {
    clear_content();
    set_has_bool_pair_content();
    content_.bool_pair_content_ = new ::Tuple_Body_BoolPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.bool_pair_content)
  return content_.bool_pair_content_;
}
::Tuple_Body_BoolPair* Tuple_Body::release_bool_pair_content() {
  if (has_bool_pair_content()) {
    clear_has_content();
    ::Tuple_Body_BoolPair* temp = content_.bool_pair_content_;
    content_.bool_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_bool_pair_content(::Tuple_Body_BoolPair* bool_pair_content) {
  clear_content();
  if (bool_pair_content) {
    set_has_bool_pair_content();
    content_.bool_pair_content_ = bool_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.bool_pair_content)
}

// optional .Tuple.Body.TuplePair tuple_pair_content = 7;
bool Tuple_Body::has_tuple_pair_content() const {
  return content_case() == kTuplePairContent;
}
void Tuple_Body::set_has_tuple_pair_content() {
  _oneof_case_[0] = kTuplePairContent;
}
void Tuple_Body::clear_tuple_pair_content() {
  if (has_tuple_pair_content()) {
    delete content_.tuple_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_TuplePair& Tuple_Body::tuple_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.tuple_pair_content)
  return has_tuple_pair_content()
      ? *content_.tuple_pair_content_
      : ::Tuple_Body_TuplePair::default_instance();
}
::Tuple_Body_TuplePair* Tuple_Body::mutable_tuple_pair_content() {
  if (!has_tuple_pair_content()) {
    clear_content();
    set_has_tuple_pair_content();
    content_.tuple_pair_content_ = new ::Tuple_Body_TuplePair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.tuple_pair_content)
  return content_.tuple_pair_content_;
}
::Tuple_Body_TuplePair* Tuple_Body::release_tuple_pair_content() {
  if (has_tuple_pair_content()) {
    clear_has_content();
    ::Tuple_Body_TuplePair* temp = content_.tuple_pair_content_;
    content_.tuple_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_tuple_pair_content(::Tuple_Body_TuplePair* tuple_pair_content) {
  clear_content();
  if (tuple_pair_content) {
    set_has_tuple_pair_content();
    content_.tuple_pair_content_ = tuple_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.tuple_pair_content)
}

// optional .Tuple.Body.NullPair null_pair_content = 8;
bool Tuple_Body::has_null_pair_content() const {
  return content_case() == kNullPairContent;
}
void Tuple_Body::set_has_null_pair_content() {
  _oneof_case_[0] = kNullPairContent;
}
void Tuple_Body::clear_null_pair_content() {
  if (has_null_pair_content()) {
    delete content_.null_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_NullPair& Tuple_Body::null_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.null_pair_content)
  return has_null_pair_content()
      ? *content_.null_pair_content_
      : ::Tuple_Body_NullPair::default_instance();
}
::Tuple_Body_NullPair* Tuple_Body::mutable_null_pair_content() {
  if (!has_null_pair_content()) {
    clear_content();
    set_has_null_pair_content();
    content_.null_pair_content_ = new ::Tuple_Body_NullPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.null_pair_content)
  return content_.null_pair_content_;
}
::Tuple_Body_NullPair* Tuple_Body::release_null_pair_content() {
  if (has_null_pair_content()) {
    clear_has_content();
    ::Tuple_Body_NullPair* temp = content_.null_pair_content_;
    content_.null_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_null_pair_content(::Tuple_Body_NullPair* null_pair_content) {
  clear_content();
  if (null_pair_content) {
    set_has_null_pair_content();
    content_.null_pair_content_ = null_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.null_pair_content)
}

// optional .Tuple.Body.ArrayPair array_pair_content = 9;
bool Tuple_Body::has_array_pair_content() const {
  return content_case() == kArrayPairContent;
}
void Tuple_Body::set_has_array_pair_content() {
  _oneof_case_[0] = kArrayPairContent;
}
void Tuple_Body::clear_array_pair_content() {
  if (has_array_pair_content()) {
    delete content_.array_pair_content_;
    clear_has_content();
  }
}
 const ::Tuple_Body_ArrayPair& Tuple_Body::array_pair_content() const {
  // @@protoc_insertion_point(field_get:Tuple.Body.array_pair_content)
  return has_array_pair_content()
      ? *content_.array_pair_content_
      : ::Tuple_Body_ArrayPair::default_instance();
}
::Tuple_Body_ArrayPair* Tuple_Body::mutable_array_pair_content() {
  if (!has_array_pair_content()) {
    clear_content();
    set_has_array_pair_content();
    content_.array_pair_content_ = new ::Tuple_Body_ArrayPair;
  }
  // @@protoc_insertion_point(field_mutable:Tuple.Body.array_pair_content)
  return content_.array_pair_content_;
}
::Tuple_Body_ArrayPair* Tuple_Body::release_array_pair_content() {
  if (has_array_pair_content()) {
    clear_has_content();
    ::Tuple_Body_ArrayPair* temp = content_.array_pair_content_;
    content_.array_pair_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Tuple_Body::set_allocated_array_pair_content(::Tuple_Body_ArrayPair* array_pair_content) {
  clear_content();
  if (array_pair_content) {
    set_has_array_pair_content();
    content_.array_pair_content_ = array_pair_content;
  }
  // @@protoc_insertion_point(field_set_allocated:Tuple.Body.array_pair_content)
}

bool Tuple_Body::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
void Tuple_Body::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
Tuple_Body::ContentCase Tuple_Body::content_case() const {
  return Tuple_Body::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Tuple

// optional string tag = 1;
void Tuple::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Tuple::tag() const {
  // @@protoc_insertion_point(field_get:Tuple.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tuple.tag)
}
 void Tuple::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tuple.tag)
}
 void Tuple::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tuple.tag)
}
 ::std::string* Tuple::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:Tuple.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tuple::release_tag() {
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tuple::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:Tuple.tag)
}

// map<string, string> attr = 2;
int Tuple::attr_size() const {
  return attr_.size();
}
void Tuple::clear_attr() {
  attr_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Tuple::attr() const {
  // @@protoc_insertion_point(field_map:Tuple.attr)
  return attr_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Tuple::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_map:Tuple.attr)
  return attr_.MutableMap();
}

// repeated .Tuple.Body body = 3;
int Tuple::body_size() const {
  return body_.size();
}
void Tuple::clear_body() {
  body_.Clear();
}
const ::Tuple_Body& Tuple::body(int index) const {
  // @@protoc_insertion_point(field_get:Tuple.body)
  return body_.Get(index);
}
::Tuple_Body* Tuple::mutable_body(int index) {
  // @@protoc_insertion_point(field_mutable:Tuple.body)
  return body_.Mutable(index);
}
::Tuple_Body* Tuple::add_body() {
  // @@protoc_insertion_point(field_add:Tuple.body)
  return body_.Add();
}
::google::protobuf::RepeatedPtrField< ::Tuple_Body >*
Tuple::mutable_body() {
  // @@protoc_insertion_point(field_mutable_list:Tuple.body)
  return &body_;
}
const ::google::protobuf::RepeatedPtrField< ::Tuple_Body >&
Tuple::body() const {
  // @@protoc_insertion_point(field_list:Tuple.body)
  return body_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
